user_agent_parsers:
  - regex: '^((?:(?! CFNetwork|/).)+)(?:/(\d+)(?:\.([a-z\d]+))*|.*)? CFNetwork/.*'
  - regex: '(CFNetwork)(?:/(d+)(?:.(d+))?(?:.([a-zd]+))?|.|$)'
  - regex: '(CaptiveNetworkSupport)-(\d+)'
  - regex: '(Pingdom.com_bot_version_)(\d+)\.(\d+)'
    family_replacement: 'PingdomBot'
  - regex: 'Google.*/\+/web/snippet'
    family_replacement: 'GooglePlusBot'
  - regex: '(Pinterest)\/(\d+)(?:\.(\d+)|[^\.]).*https?:\/\/'
  - regex: '(ELB-HealthChecker|SiteScope)(?:[/ ](d+)(?:.(d+))?(?:.([a-zd]+))?|.|$)'
    regex_flag: 'i'
  - regex: '(PRTG Network Monitor|PingdomTMS)(?:[/ ](d+)(?:.(d+))?(?:.([a-zd]+))?|.|$)'
    regex_flag: 'i'
  - regex: '(PTST)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'SpeedCurve WebPage Test'
  - regex: '(BoardReader Favicon Fetcher\s{0,5}|HubSpot Marketing Grader|Comodo SSL Checker|Flamingo_SearchEngine|Google-HTTP-Java-Client|Peeplo Screenshot Bot|IlTrovatore(?:-Setaccio)?|Rackspace Monitoring|facebookexternalhit|Mediapartners-Google|PlantyNet_WebRobot|Daumoa(?:-feedfetcher)?|Innovazion Crawler|semanticdiscovery|Apache-HttpClient|Xenu(?:.s)? Link Sleuth|AppEngine-Google|InternetArchive|PagesInventory|archive.*?\.org_bot|1470\.net crawler|AdsBot-Google(?:-[a-z]{1,20})?|fast-webcrawler|websitepulse checker|Google SketchUp|GoogleImageProxy|Google Web Preview|Google Page Speed Insights|ConveraCrawler|dataparksearch|PaxleFramework|ObjectsSearch|8bo Crawler Bot|ZeBot_www\.ze\.bz|Yahoo[a-z]{0,20}Seeker|collection@infegy\.com|Catchpoint(?: bot)?|FollowSite Bot|ThumbShotsBot|YottaaMonitor|Feed Seeker Bot|(?:[a-z]{1,20}-)?Googlebot(?:-[a-z]{1,20})?|masidani_bot|Sogou \w{1,20} (?:Robot|Spider)|ichiro(?:/mobile)?|http%20client|Python-urllib|Microsoft .*? Bot|Thumbshots\.ru|TheUsefulbot|robotgenius|BoardReader|msnbot(?:-media\s{0,5})?|\b\w*favicon\w*\b|boitho.com-dc|Read%20Later|WASALive.Bot|BingPreview|HttpMonitor|LinkedInBot|MSIECrawler|netresearch|searchsight|Yahoo! Slurp|SiteCon|Slackbot-LinkExpanding|Slack-ImgProxy|ScoutJet|PayPal IPN|BlogBridge|Checklinks|PagePeeker|TwitterBot|Linguee Bot|Mail\.RU_Bot|RedCarpet|A6-Indexer|Squrl Java|StatusCake|adbeat\.com|altavista|Altresium|charlotte|findlinks|Retreiver|TLSProber|Tumblr|WordPress|NewsGator[^/]*|LesnikBot|archiver|Votay bot|teoma(?!bar)?|archiver|blitzbot|clumboot|heritrix|Icarus6j|IconSurf|InfuzApp|mogimogi|NerdyBot|Netvibes|WebThumb|IP2[a-z]{1,20}Bot|voila(?:bot)?|Lite Bot|Riddler|Orbiter|\bYeti(?:-[a-z]{0,20})?|Yandex\w+|^voyager|bingbot|furlbot|gigabot|masscan|openbot|polybot|Riddler|scooter|scrubby|seekbot|URL2PNG|WhatWeb|WinHTTP|ZooShot|BotSeer|mozDex|Reaper|^vortex|DeuSu|Genieo|GomezA|holmes|Kraken|Kurzor|larbin|m65bot|msrbot|pompos|Qwantify|Scrapy|snappy|speedy|ZyBorg|Wotbox|^Nutch[^/]{0,30}|Nutch|Argus|htdig|Llaut|lycos|Slurp|jbot\b|50\.nu|Bot-TailTrend|EasyDL|Filangy|Yahoo! SearchMonkey|CostaCider Search|YahooYSMcm|YFSJ crawler|Y!J(?:-[A-Z]+)?|Buscaplus Robi|Minstrel-Browse|JemmaTheTourist|Popdexter|SafariBookmarkChecker|Giant|WorldWideWeb-X|XaxisSemanticsClassifier|notifyninja\.com|WIRE|^NING|JNLP|^zao|baidu[a-z]{0,20}(?:spider|Mobaider)|(?:[a-z\.\u0027]{1,30}[ _-]){0,4}[a-z_]{0,30}(?:crawler|crawl|scraper|spider|indexer|webbot|robot\b|(?:(?!cubot)[\w-]{2})bot\b|[\w.]+ bot\b| bot(?=@)\b)|[^ \/]\bbot\b|\b008)(?:[ /-](d+)(?:.(d+))?(?:.([a-zd]+))?)?'
    regex_flag: 'i'
  - regex: '^([^/]+)/(d+)(?:.(d+))?(?:.([a-zd]+))? \((?:iPhone|iPad|iPod); iOS [0-9\.]+; Scale/[0-9\.]+\)'
  - regex: '^([^/]+)/(d+)(?:.(d+))?(?:.([a-zd]+))? iOS/[0-9\.]+ model/(?:iPhone|iPad|iPod)'
  - regex: 'Microsoft Office Outlook 12\.\d+\.\d+|MSOffice 12'
    family_replacement: 'Outlook'
    v1_replacement: '2007'
  - regex: 'Microsoft Outlook 14\.\d+\.\d+|MSOffice 14'
    family_replacement: 'Outlook'
    v1_replacement: '2010'
  - regex: 'Microsoft Outlook 15\.\d+\.\d+'
    family_replacement: 'Outlook'
    v1_replacement: '2013'
  - regex: 'Microsoft Outlook (?:Mail )?16\.\d+\.\d+'
    family_replacement: 'Outlook'
    v1_replacement: '2016'
  - regex: 'Outlook-Express\/7\.0.*'
    family_replacement: 'Windows Live Mail'
  - regex: '(YahooMobileMail|Lotus-Notes|MailBar|MacOutlook|Outlook-iOS-Android|ExchangeWebServices|ExchangeServicesClient|Microsoft Outlook|Outlook-Express|Barca(?:Pro)?|Postbox|Slack_SSB|HipChat|kmail2|The Bat!(?: Voyager)?)(?:[/ ](d+)(?:.(d+))?(?:.([a-zd]+))?)?'
  - regex: '(Airmail) (d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(Shredder|Spicebird)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '^Mozilla\/5\.0 \(.* Mac OS X.*\(KHTML, like Gecko\)(?: Mobile\/[\S]*)?$'
    family_replacement: 'Apple Mail'
  - regex: 'Gecko/\d+ (Lightning)/(d+)(?:.(d+))?(?:.?([a-zd]+))?'
  - regex: '(Thunderbird|Icedove)/(d+)(?:.(d+))?(?:.?([a-zd]+))?'
    family_replacement: 'Thunderbird'
  - regex: '\b(CITA RSS Aggregator|Custom-Feed Reader|Digg Feed Fetcher|AideRSS|Akregator|Apple-PubSub|FeedDa?emon|Feeddler|Feedreader|JetBrains Omea Reader|Liferea|NetNewsWire|NewsBlur|newsbeuter|Pulp|ReadKit|(?:RSS|Rss)Bandit|RssBar|RSS Junkie|RSS Menu|RSSOwl|SimplePie|SimpleRSS|Tiny Tiny RSS|UniversalFeedParser|Wizz RSS News Reader|Windows-RSS-Platform|Bloglovin|Stringer|Mtps Feed Aggregation System|Feedbin )(?:[ /](d+)(?:.(d+))?(?:.([a-zd]+))?)?'
  - regex: '\b(AntennaPod|BashPodder|BeyondPod|bPod|DoggCatcher|Doppler|Downcast|ESPN Radio|Fancy Cloud Music|FancyMusic|gPodder|GoldenPod|iPodder|jPodder|Juice|MediaGo|Overcast|Peapod|philpodder|Player FM|PodCruncher|PocketTunes|Podcasts|Podkicker(?: Classic| Pro|)|podracer|RSS_?Radio)\b(?:(?: v ?|[ /])(d+)(?:.(d+))?(?:.([a-zd]+))?)?'
  - regex: '\b(AlexaMediaPlayer|Banshee|Clementine|ExoPlayerLib|FlyCast|foobar2000|HTC Streaming Player|Instacast|iTunes(?:-iP\w+(?:-\w+)?)?|Kodi|LG Player|MediaMonkey|Nightingale|NSPlayer|Songbird|spmc|Spotify|SubStream|vlc|VLC|VOX Music Player|Windows-Media-Player(?:-\w+)?|WMPlayer|XBMC|Zune)\b(?:[ /](\d+)(?:\.(\d+)(?:\.(\d+))?(\-[A-Z\d]+)?)?)?'
    v3_replacement: '$4$5'
  - regex: '(Lavf|Miro)/?(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(QuickTime)(?:(?:(?:.+qtver=)|(?:(?: E-)?[\./]))(d+)(?:.(d+))?(?:.([a-zd]+))?)?'
  - regex: '\[FB.*;(FB(?:AV|Version))/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Facebook'
  - regex: '\[FB.*/FB'
    family_replacement: 'Facebook'
  - regex: '\[(Pinterest)/[^\]]+\]'
  - regex: '(Pinterest)(?: for Android(?: Tablet)?)?/(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '\b(Kurio|BacaBerita App|Deezer|SohuNews|Snapchat)[ /](d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: 'Mozilla.*\b(Beonex|Camino|Chimera|CometBird|Firebird(?: Browser)?|Fireweb Navigator|Flock|IceDragon|SailfishBrowser|SeaMonkey)/(d+)(?:.(d+))?(?:.?([a-zd]+))?'
  - regex: '(Fennec)/(d+)(?:.(d+))?(?:.?([a-zd]+))?'
    family_replacement: 'Firefox Mobile'
  - regex: '(?:Mobile[:;]|Tablet;).*(Firefox)/(d+)(?:.(d+))?(?:.?([a-zd]+))?'
    family_replacement: 'Firefox Mobile'
  - regex: '\b(BonEcho|GranParadiso|Lorentz|Minefield|Namoroka|Pale[Mm]oon|Shiretoko)/(d+)(?:.(d+))?(?:.?([a-zd]+))?'
  - regex: '(Firefox).*Tablet browser (d+)(?:.(d+))?(?:.?([a-zd]+))?'
    family_replacement: 'MicroB'
  - regex: '(MozillaDeveloperPreview)/(d+)(?:.(d+))?(?:.?([a-zd]+))?'
  - regex: '(FxiOS)/(d+)(?:.(d+))?(?:.?([a-zd]+))?'
    family_replacement: 'Firefox iOS'
  - regex: '(Firefox)/(d+)(?:.(d+))?(?:.([a-zd]+))? \(Swiftfox\)'
    family_replacement: 'Swiftfox'
  - regex: '(Waterfox)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(Firefox)/(d+)(?:.(d+))?(?:.?([a-zd]+))?'
  - regex: '(MyIBrow)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'My Internet Browser'
  - regex: '(UC? ?Browser|UCWEB|\bU3)[ /]?(\d+)\.(\d+)\.(\d+)'
    family_replacement: 'UC Browser'
  - regex: '(Opera Tablet).*Version/(d+)(?:.(d+))?(?:.(d+))?'
  - regex: '(Opera Mini)(?:/att)?/(d+)(?:.(d+))?(?:.(d+))?'
  - regex: '(Opera Mini)'
  - regex: '(Opera)/.+Opera Mobi.+Version/(d+)(?:.(d+))?(?:.(d+))?'
    family_replacement: 'Opera Mobile'
  - regex: '(Opera)/(d+)(?:.(d+))?(?:.([a-zd]+))?.+Opera Mobi'
    family_replacement: 'Opera Mobile'
  - regex: 'Opera Mobi.+(Opera)(?:\/|\s+)(d+)(?:.(d+))?(?:.(d+))?'
    family_replacement: 'Opera Mobile'
  - regex: 'Opera Mobi'
    family_replacement: 'Opera Mobile'
  - regex: '(Opera)/9.80.*Version/(d+)(?:.(d+))?(?:.(d+))?'
  - regex: '(?:Mobile Safari).*(OPR)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Opera Mobile'
  - regex: '(?:Chrome).*(OPR)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Opera'
  - regex: 'Chrome/.+( MMS)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Opera Neon'
  - regex: '(Coast)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Opera Coast'
  - regex: '(OPiOS)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Opera Mini'
  - regex: '(hpw|web)OS/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'webOS Browser'
  - regex: '(luakit)'
    family_replacement: 'LuaKit'
  - regex: '(rekonq)(?:/(d+)(?:.(d+))?(?:.([a-zd]+))? Safari)?'
    family_replacement: 'Rekonq'
  - regex: '([Cc]onkeror)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Conkeror'
  - regex: '([Kk]onqueror)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Konqueror'
  - regex: '(WeTab)-Browser'
  - regex: '(Comodo[ _]Dragon)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Comodo Dragon'
  - regex: '(Symphony) (\d+).(\d+)'
  - regex: '(YaBrowser)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Yandex Browser'
  - regex: '(PLAYSTATION 3.+WebKit|Nintendo 3DS|PlayStation Vita|AppleWebKit.+ NX)(?:/(d+)(?:.(d+))?(?:.([a-zd]+))?)?'
    family_replacement: 'NetFront NX'
  - regex: '(Silk)/(\d+)\.(\d+)(?:\.([0-9\-]+))?'
    family_replacement: 'Amazon Silk'
  - regex: '(Puffin|SamsungBrowser|MobileIron|Crosswalk|baidubrowser|OverwolfClient|Polarity|Qiyu|Tenta)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(coc_coc_browser|CoRom)/(\d+)\.(\d+)(?:\.(\d+))?'
    family_replacement: 'Coc Coc'
  - regex: 'Windows Phone .*(Edge)/(\d+)\.(\d+)'
    family_replacement: 'Edge Mobile'
  - regex: '(IEMobile)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'IE Mobile'
  - regex: '(CrMo)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Chrome Mobile'
  - regex: '(CriOS)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Chrome Mobile iOS'
  - regex: '; wv\).+(Chrome)/(d+)(?:.(d+))?(?:.([a-zd]+))?.*\bMobile\b'
    family_replacement: 'Chrome Mobile Webview'
  - regex: '(Chrome)/(d+)(?:.(d+))?(?:.([a-zd]+))?.*\bMobile\b'
    family_replacement: 'Chrome Mobile'
  - regex: '\bMobile\b.*(Chrome)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Chrome Mobile'
  - regex: '(chromeframe)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Chrome Frame'
  - regex: '(Chrome)/(d+)(?:.(d+))?(?:.([a-zd]+))?.* MRCHROME'
    family_replacement: 'Mail.ru Chromium Browser'
  - regex: '(Chrome)/(d+)(?:.(d+))?(?:.([a-zd]+))?[\d.]* Iron[^/]'
    family_replacement: 'Iron'
  - regex: '(Tizen|SLP) Browser/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Tizen Browser'
  - regex: '(SE 2\.X) MetaSr (d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Sogou Explorer'
  - regex: '(FlyFlow)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Baidu Explorer'
  - regex: '((?:BD)?Spark|BIDUBrowser)[ /](d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Baidu Spark'
  - regex: '(MQQBrowser/Mini)(?:(d+)(?:.(d+))?(?:.([a-zd]+))?)?'
    family_replacement: 'QQ Browser Mini'
  - regex: '(MQQBrowser)(?:/(d+)(?:.(d+))?(?:.([a-zd]+))?)?'
    family_replacement: 'QQ Browser Mobile'
  - regex: '(QQBrowser)(?:/(d+)(?:.(d+))?(?:.([a-zd]+))?)?'
    family_replacement: 'QQ Browser'
  - regex: '(AOL)[/ ](\d+)\.(\d+);? AOL(?:Build|BUILD)[ /]\d+'
  - regex: '(ADM)/'
    family_replacement: 'AOL'
  - regex: '(OmniWeb)/v?(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '\b(Navigator|Netscape6)/(\d+)(?:\.(\d+)(?:\.?([ab]?\d+[a-z]*))?)?'
    family_replacement: 'Netscape'
  - regex: '\b(Edge)/(\d+)(?:\.(\d+))?'
    family_replacement: 'Edge'
  - regex: '(Mercury|Puffin)/(\d{3,5})'
  - regex: '(Chrome)\/(d+)(?:.(d+))?(?:.([a-zd]+))?.*\b(JuziBrowser|Salam Browser)\b'
    family_replacement: '$5'
  - regex: '\b(JuziBrowser)\b'
  - regex: '(Phoenix)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(MAXTHON|Maxthon|MxBrowser)[ /](d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Maxthon'
  - regex: '(1stBrowser|7Star|Abrowser|AdobeAIR|amaya|Amiga-AWeb|AmigaVoyager|ANTFresco|ANTGalio|Arora|AviraScout|Bolt|BOLT|brave|Bunjalloo|Cent|Crazy Browser|Chromium|ChromePlus|Contiki|CoolNovo|Demeter|Dillo|Dolfin|Dolphin http client|Dragon|Epiphany|EspialTVBrowser|Electron|Espial|Fennec|FireWeb|Fluid|Fresco|Galeon|Googlebot|Google Earth(?: EC)?|HbbTV|HotJava|IBrowse|iCab|Iceape|ICE Browser|IceCat|Iceweasel|IceWeasel|iRider|OneBrowser|Iris|Iron|Jasmine|Kapiko|Kazehakase|Kindle|Kinza|K-Meleon|Kuaiso|LG Browser|Lobo|Lunascape|Lynx|MacAppStore|Maemo Browser|mDolphin|Mercury|MiniBrowserMobile|Midori|Minimo|Net[Ff]ront|NetFrontLifeBrowser|NetPositive|Netscape|NetSurf|OmniWeb|Opera|Opera Mini|Orca|Otter|PaleMoon|Planetweb|Polaris|Puffin|PyAMF|QupZilla|qutebrowser|Raven for Mac|RockMelt|SailfishBrowser|SeaMonkey|Shiira|SkipStone|Skyfire|Sleipnir|Slimjet|Snowshoe|Space Bison|Sparrow|SputnikBrowser|Stainless|Sunrise|ThunderBrowse|TungstenBrowser|UP\.Browser|Valve (?:Client|Steam \w+)|Vienna|Vivaldi|WebPilot|WebPositive|Whale|Xiino)[/ ](d+)(?:.(d+))?(?:.(d+))?'
  - regex: '(SznProhlizec)/(\d+)\.(\d+)(?:\.(\d+))?'
    family_replacement: 'Seznam.cz'
  - regex: '(QIHU 360[SE]E)'
  - regex: '(Chrome)[/ ](d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(HeadlessChrome)'
  - regex: '(Galeon|UP\.Browser)(?:[ /](d+)(?:.(d+))?(?:.([a-zd]+))?)?'
  - regex: '(Openwave)(?:/(d+)(?:.(d+))?(?:.([a-zd]+))?)?'
    family_replacement: 'UP.Browser'
  - regex: '\b(Dolphin)(?: |/|HDCN/|/INT\-)(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '\b(NexPlayer)\b(?:[ /]?(d+)(?:.(d+))?(?:.([a-zd]+))?)?'
  - regex: '(MSIE) (d+)(?:.(d+))?(?:.([a-zd]+))?.*Xbox[^\-]'
    family_replacement: 'IE Xbox'
  - regex: '(IEMobile)[ /](d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'IE Mobile'
  - regex: '(MSIE) (d+)(?:.(d+))?(?:.([a-zd]+))?.*XBLWP7'
    family_replacement: 'IE Large Screen'
  - regex: '(Obigo|OBIGO|Teleca)(?:InternetBrowser|\-?Browser)?(?:[^\d]*0*(\d+)(?:.(\d+))?)?'
    family_replacement: 'Obigo'
  - regex: '(Maxthon|MyIE2|Uzbl|Shiira)'
    v1_replacement: '0'
  - regex: '(PLAYSTATION 3|PlayStation Portable)'
    family_replacement: 'NetFront'
  - regex: '(XBMC)/(\d+)\.(\d+)[-\w\s]+(r\d+)'
  - regex: '(ABrowse) (\d+)(?:\.(\d+))?'
  - regex: '(BrowseX) \((d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(NCSA[ _]Mosaic)(?:/(\d+)[\.-](\d+)(?:[\.-]?([a-z]?\d+))?)?'
    family_replacement: 'NCSA Mosaic'
  - regex: '(POLARIS|Embider)/(\d+)\.(\d+)'
    family_replacement: 'Polaris'
  - regex: '(AvantGo) (\d+).(\d+)'
  - regex: '(Avant)'
    v1_replacement: '1'
  - regex: '(QtCarBrowser)'
    v1_replacement: '1'
  - regex: '^(iBrowser/Mini)(\d+)\.(\d+)'
    family_replacement: 'iBrowser Mini'
  - regex: '^(iBrowser|iRAPP)/(\d+)\.(\d+)'
  - regex: '\b(IBrowse)(?:[ /](\d+)\.(\d+))?'
  - regex: '(NokiaBrowser|BrowserNG)/(\d+)\.(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Nokia Browser'
  - regex: 'Symbian.*(Series60)/5\.0'
    family_replacement: 'Nokia Browser'
    v1_replacement: '7'
    v2_replacement: '0'
  - regex: '(S40OviBrowser)/(d+)(?:.(d+))?(?:.([a-zd]+))?(?:\.(\d+))?'
    family_replacement: 'Ovi Browser'
  - regex: '(Series60)/(\d+)\.(\d+).*AppleWebKit'
    family_replacement: 'Nokia OSS Browser'
  - regex: '(Series60)/(\d+)\.(\d+)'
    family_replacement: 'Nokia Services (WAP) Browser'
  - regex: '^(Nokia)'
    family_replacement: 'Nokia Services (WAP) Browser'
  - regex: '(Series80|Series90)/(\d)\.(\d)'
    family_replacement: 'Nokia $1 Browser'
  - regex: '(PlayBook).+RIM Tablet OS (d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'BlackBerry WebKit'
  - regex: '(Black[bB]erry|BB10).+Version/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'BlackBerry WebKit'
  - regex: '(Black[bB]erry)\s?(\d+)'
    family_replacement: 'BlackBerry'
  - regex: 'Palm.*\b(Pre|Blazer|WebPro)\b(?:[ /](\d+)(?:\.(\d+)(?:\.(\d+[a-z]*))?)?)?'
    family_replacement: 'Palm $1'
  - regex: '\b(E?[Ll]inks)(?: \(|\/)(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(QtWeb) Internet Browser/(\d+)\.(\d+)'
  - regex: '(PhantomJS|CocoonJS)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(AppleWebKit)/(\d+)\.?(\d+)?\+ .* Safari'
    family_replacement: 'AppleWebKit'
  - regex: '(Android) (d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(iPod|iPhone|iPad).+Version/(d+).(d+)(?:.(d+))?.*[ +]Safari'
    family_replacement: 'Mobile Safari'
  - regex: '(iPod|iPhone|iPad).+Version/(d+).(d+)(?:.(d+))?'
    family_replacement: 'Mobile Safari UI/WKWebView'
  - regex: '(iPod|iPhone|iPad);.*CPU.*OS[ +](d+)(?:[._](d+))?(?:[._](d+))?.*Mobile.*[ +]Safari'
    family_replacement: 'Mobile Safari'
  - regex: '(iPod|iPhone|iPad);.*CPU.*OS[ +](d+)(?:[._](d+))?(?:[._](d+))?.*Mobile'
    family_replacement: 'Mobile Safari UI/WKWebView'
  - regex: '(iPod|iPhone|iPad).*[ +]Safari'
    family_replacement: 'Mobile Safari'
  - regex: '(iPod|iPhone|iPad)'
    family_replacement: 'Mobile Safari UI/WKWebView'
  - regex: '(Version)/(d+)(?:.(d+))?(?:.([a-zd]+))?.*Safari/'
    family_replacement: 'Safari'
  - regex: '(Safari)/\d+'
  - regex: '(OLPC)/Update(\d+)\.(\d+)'
  - regex: '(OLPC)/Update()\.(\d+)'
    v1_replacement: '0'
  - regex: '(SEMC\-Browser)/(\d+)\.(\d+)'
  - regex: 'Trident(.*)rv:(\d+)\.(\d+)'
    family_replacement: 'IE'
  - regex: 'rv: ?(\d+)\.(\d+)\).*(Firefox)/[A-F0-9]{4}'
    family_replacement: '$3'
    v1_replacement: '$1'
    v2_replacement: '$2'
    v3_replacement: ''
  - regex: '(Firefox)/(\d+)(?:\.(\d+)(?:\.?(pre|[ab]?\d+[a-z]*))?)?'
  - regex: '(?:MS)?(IE)[ /](\d+)\.(\d+)'
  - regex: '(Phantom)/V(\d+)\.(\d+)'
    family_replacement: 'Phantom Browser'
  - regex: '(?:^|^Mozilla/\d+\.\d+ (?:\([^\)]+\) )?)(Java)[ /]?(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '\b(curl|jupdate|libcurl-agent|libwww-perl|Microsoft-CryptoAPI|Microsoft SkyDriveSync|okhttp|OpenBSD ftp|python-requests|SophosAgent|SophosUpdateManager|urlgrabber|(?:\w+) APT-HTTP|Wget|Windows-Update-Agent)\b(?:[ /](d+)(?:.(d+))?(?:.([a-zd]+))?)?'
  - regex: '\b(Hatena-Mobile-Gateway)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: 'https?:\/\/(?:www\.)?([^/)]+)'
engine_parsers:
  - regex: 'MSIE ([^8])\.\d.* (Trident)[ /](4)\.(\d+)(?:\.(\d+))?'
    family_replacement: '$2'
    v1_replacement: '$3'
    v2_replacement: '$4'
    v3_replacement: '$5'
  - regex: 'MSIE ([^9])\.\d.* (Trident)[ /](5)\.(\d+)(?:\.(\d+))?'
    family_replacement: '$2'
    v1_replacement: '$3'
    v2_replacement: '$4'
    v3_replacement: '$5'
  - regex: 'MSIE ((?:(?!10)\d)+)\.\d.* (Trident)[ /](6)\.(\d+)(?:\.(\d+))?'
    family_replacement: '$2'
    v1_replacement: '$3'
    v2_replacement: '$4'
    v3_replacement: '$5'
  - regex: 'MSIE ((?:(?!11)\d)+)\.\d.* (Trident)[ /](7)\.(\d+)(?:\.(\d+))?'
    family_replacement: '$2'
    v1_replacement: '$3'
    v2_replacement: '$4'
    v3_replacement: '$5'
  - regex: '(Trident|Presto)[ /](d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: 'Opera'
    family_replacement: 'Presto'
  - regex: '\b(Edge)/(\d+)(?:\.(\d+))?'
    family_replacement: 'EdgeHTML'
  - regex: 'QtWebEngine/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Blink'
  - regex: '(Chrome)[/](\d+)\.(d+)(?:.(d+))?(?:.([a-zd]+))?.*OPR/\d+'
    family_replacement: 'Blink'
  - regex: 'SamsungBrowser[/].*(Chrome)[/](d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Blink'
  - regex: 'Silk[/].*(Chrome)[/](d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Blink'
  - regex: '(?:; wv\) )?AppleWeb[Kk]it/.*Version/.*(Chrome)[/](d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Blink'
  - regex: '(Chrome)[/](d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Blink'
  - regex: '(HeadlessChrome)'
    family_replacement: 'Blink'
  - regex: '(TDEHTML)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'TDEHTML'
  - regex: '(KHTML|Konqueror)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'KHTML'
  - regex: '(Silk)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Webkit'
  - regex: 'Web[Kk]it.*(NokiaBrowser|BrowserNG)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Webkit'
  - regex: '^Mozilla.*Android\b.*SAMSUNG.*(AppleWeb[Kk]it)/?(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Webkit'
  - regex: 'Android\b.*(AppleWeb[Kk]it)/?(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Webkit'
  - regex: 'DirectFB\b.*(AppleWeb[Kk]it)/?(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Webkit'
  - regex: '(AppleWeb[Kk]it)/?(d+)(?:.(d+))?(?:.([a-zd]+))?.*\b(NetCast|LG Browser)'
    family_replacement: 'Webkit'
  - regex: 'Smart-?TV\b.*(AppleWeb[Kk]it)/?(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Webkit'
  - regex: '(Goanna)/.*PaleMoon/(d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(rv:)(\d+)\.(\d+[ab]?)\.?([ab]?\d+[a-z]*)?\.?(\d+[a-z]*)?[;\)].* Gecko(?:[ /]|$)'
    family_replacement: 'Gecko'
  - regex: '(Gecko)/20\d{6}'
  - regex: '(AppleWeb[Kk]it)(?:/(d+)(?:.(d+))?(?:.([a-zd]+))?|[ ,]|$)'
    family_replacement: 'Webkit'
  - regex: '(Web[Kk]it)(?:/(d+)(?:.(d+))?(?:.([a-zd]+))?|[ ,]|$)'
    family_replacement: 'Webkit'
  - regex: '(Net[Ff]ront)[ /]?(d+)(?:.(d+))?(?:.([a-zd]+))?'
    family_replacement: 'Netfront'
  - regex: '(UCBrowser)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
os_parsers:
  - regex: '^UCWEB.*; (Adr) (\d+)\.(\d+)(?:[.\-]([a-z0-9]+))?;'
    os_replacement: 'Android'
  - regex: '^UCWEB.*; (iPa?d|iPh) OS (d+)(?:[._](d+))?(?:[._](d+))?;'
    os_replacement: 'iOS'
  - regex: '^UCWEB.*; (wds) (d+)(?:.(d+))?(?:.([a-zd]+))?;'
    os_replacement: 'Windows Phone'
  - regex: '^(JUC).*; ?U; ?(?:Android)?(\d+)\.(\d+)(?:[\.\-]([a-z0-9]+))?'
    os_replacement: 'Android'
  - regex: '\b(Xbox)\b(?:(?!Darwin).)*$'
  - regex: '(XBLWP7)'
    os_replacement: 'Windows Phone'
  - regex: '(Windows Phone) (?:OS[ /])?(\d+)\.(\d+)'
  - regex: '(Windows ?Mobile)'
    os_replacement: 'Windows Mobile'
  - regex: '(Windows ?CE)'
    os_replacement: 'Windows CE'
  - regex: '(Windows NT 6\.4)'
    os_replacement: 'Windows 10'
  - regex: '(Windows NT 10\.0|Windows 10\.0)'
    os_replacement: 'Windows 10'
  - regex: '(Windows NT 6\.3; ARM;)'
    os_replacement: 'Windows RT 8.1'
  - regex: '(Windows NT 6\.3|CYGWIN_NT-6\.3|Windows 8.1)'
    os_replacement: 'Windows 8.1'
  - regex: '(Windows NT 6\.2; ARM;)'
    os_replacement: 'Windows RT'
  - regex: '(Windows NT 6\.2|CYGWIN_NT-6\.2|Windows 8)'
    os_replacement: 'Windows 8'
  - regex: '(Windows NT 6\.1|CYGWIN_NT-6\.1|Windows 7)'
    os_replacement: 'Windows 7'
  - regex: '(Windows NT 6\.0|CYGWIN_NT-6\.0|Windows Vista)'
    os_replacement: 'Windows Vista'
  - regex: '(Windows NT 5\.2|CYGWIN_NT-5\.2|Windows Server 2003)'
    os_replacement: 'Windows Server 2003'
  - regex: '(Windows NT 5\.1|CYGWIN_NT-5\.1|Windows XP)'
    os_replacement: 'Windows XP'
  - regex: '(Windows NT 5\.0|CYGWIN_NT-5\.0|Win ?2000|Windows 2000)'
    os_replacement: 'Windows 2000'
  - regex: '(Windows NT 4\.0|CYGWIN_NT-4\.0|Win ?NT|Windows NT)'
    os_replacement: 'Windows NT'
  - regex: '(Win 9x 4\.90|CYGWIN_ME-4\.90|Win ?ME|Windows ME)'
    os_replacement: 'Windows ME'
  - regex: '(Win ?98|CYGWIN_98-4\.10|Windows 98)'
    os_replacement: 'Windows 98'
  - regex: '(Win32|Win ?95|CYGWIN_95-4\.0|Windows[ _]95)'
    os_replacement: 'Windows 95'
  - regex: '(Win16|Win ?3.\1|Windows 3\.1)'
    os_replacement: 'Windows 3.1'
  - regex: '(Windows)(?:(?!CFNetwork).)*$'
  - regex: '(Android) (d+)(?:.(d+))?(?:.(d+))?(?:.(d+))?.*(?:Ali)?(YunOS)-'
    regex_flag: 'i'
    os_replacement: 'YunOS'
  - regex: '(?:Ali)?(YunOS)[ /\-](d+)(?:.(d+))?(?:.(d+))?(?:.(d+))?'
    regex_flag: 'i'
    os_replacement: 'YunOS'
  - regex: '(RemixOS) (d+)(?:.(d+))?(?:.(d+))?(?:.(d+))?'
  - regex: '(CPU[ +]OS|[iI]Phone[ +]OS|CPU[ +]iPhone)[ +]+(\d+)[_\.](\d+)(?:[_\.](\d+))?.*Outlook-iOS-Android'
    os_replacement: 'iOS'
  - regex: '^Outlook-iOS-Android'
    os_replacement: ''
  - regex: '(Android)[ \-/](\d+)\.(\d+)(?:[.\-]([a-z0-9]+))?'
  - regex: '\((Linux); U; (\d+)\.(\d+)(?:[\.-](\d+|update1))?;'
    os_replacement: 'Android'
  - regex: '(Android) Donut'
    os_v1_replacement: '1'
    os_v2_replacement: '6'
  - regex: '(Android) Eclair'
    os_v1_replacement: '2'
    os_v2_replacement: '1'
  - regex: '(Android) Froyo'
    os_v1_replacement: '2'
    os_v2_replacement: '2'
  - regex: '(Android) Gingerbread'
    os_v1_replacement: '2'
    os_v2_replacement: '3'
  - regex: '(Android) Honeycomb'
    os_v1_replacement: '3'
  - regex: 'Build/(LRX22G)'
    os_replacement: 'Android'
    os_v1_replacement: '5'
    os_v2_replacement: '0'
    os_v3_replacement: '2'
  - regex: 'Build/(LRX22C)'
    os_replacement: 'Android'
    os_v1_replacement: '5'
    os_v2_replacement: '0'
    os_v3_replacement: '1'
  - regex: 'Build/(LRX21)'
    os_replacement: 'Android'
    os_v1_replacement: '5'
    os_v2_replacement: '0'
    os_v3_replacement: '0'
  - regex: 'Build/(KTU84Q|KTU84P)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '4'
    os_v3_replacement: '4'
  - regex: 'Build/(KTU84)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '4'
    os_v3_replacement: '3'
  - regex: 'Build/(KVT49L|KOT49H)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '4'
    os_v3_replacement: '2'
  - regex: 'Build/(KOT49)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '4'
    os_v3_replacement: '1'
  - regex: 'Build/(KRT16)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '4'
  - regex: 'Build/(JLS36I)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '3'
    os_v3_replacement: '1'
  - regex: 'Build/(JLS36|JSS15|JSR78|JWR66)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '3'
  - regex: 'Build/(JDQ39)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '2'
    os_v3_replacement: '2'
  - regex: 'Build/(JOP40)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '2'
    os_v3_replacement: '1'
  - regex: 'Build/(JZO54)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '1'
    os_v3_replacement: '2'
  - regex: 'Build/(JRO03)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '1'
    os_v3_replacement: '1'
  - regex: 'Build/(IMM76)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '0'
    os_v3_replacement: '4'
  - regex: 'Build/(IML77|IML74)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '0'
    os_v3_replacement: '3'
  - regex: 'Build/(ICL53)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '0'
    os_v3_replacement: '2'
  - regex: 'Build/(ITL41)'
    os_replacement: 'Android'
    os_v1_replacement: '4'
    os_v2_replacement: '0'
    os_v3_replacement: '1'
  - regex: 'Build/(HTK55|HTK75)'
    os_replacement: 'Android'
    os_v1_replacement: '3'
    os_v2_replacement: '2'
    os_v3_replacement: '1'
  - regex: 'Build/(GWK74|GRWK74)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '3'
    os_v3_replacement: '7'
  - regex: 'Build/(GINGERBREAD|GRK39)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '3'
    os_v3_replacement: '6'
  - regex: 'Build/(GRJ90)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '3'
    os_v3_replacement: '5'
  - regex: 'Build/(GRJ22|GRJ06D)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '3'
    os_v3_replacement: '4'
  - regex: 'Build/(GRJ22|GRJ06D)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '3'
    os_v3_replacement: '3'
  - regex: 'Build/(GRI54|GRI40)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '3'
    os_v3_replacement: '2'
  - regex: 'Build/(GRH78C)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '3'
    os_v3_replacement: '1'
  - regex: 'Build/(GRH78)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '3'
    os_v3_replacement: '1'
  - regex: 'Build/(GRH55)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '3'
  - regex: 'Build/(FRK76C|FRK76)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '2'
    os_v3_replacement: '3'
  - regex: 'Build/(FRG83G)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '2'
    os_v3_replacement: '2'
  - regex: 'Build/(FRG83)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '2'
    os_v3_replacement: '1'
  - regex: 'Build/(FROYO|FRG22D|FRG01B|FRF91|FRF85B)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '2'
  - regex: 'Build/(ECLAIR|EPF|ESE|EPE|ERE|ERD|ESD)'
    os_replacement: 'Android'
    os_v1_replacement: '2'
    os_v2_replacement: '1'
  - regex: 'Build/(CUPCAKE)'
    os_replacement: 'Android'
    os_v1_replacement: '1'
    os_v2_replacement: '5'
  - regex: '(Raspbian)[ \-/](\d+)\.(\d+)(?:[.-]([a-z0-9]+))?'
  - regex: '(Silk-Accelerated=[a-z]{4,5})'
    os_replacement: 'Android'
  - regex: '(AmigaO[Ss]|AmigaVoyager|Amiga-AWeb)(?: ?(d+)(?:.(d+))?(?:.([a-zd]+))?)?'
    os_replacement: 'AmigaOS'
  - regex: '\b(Tizen)(?:[ /](d+)(?:.(d+))?(?:.([a-zd]+))?)?'
  - regex: '(webOS\.TV)-2016'
    os_replacement: 'webOS TV'
    os_v1_replacement: '3'
  - regex: '(Web0S).*WEBOS(d+)(?:.(d+))?(?:.([a-zd]+))?|Web0S'
    os_replacement: 'webOS TV'
  - regex: '(hpw|web)OS[ /](d+)(?:.(d+))?(?:.([a-zd]+))?'
    os_replacement: 'webOS'
  - regex: '(webOS)'
  - regex: '((?:Mac[ +]?|; )OS[ +]X)[ /+](?:Version )?(?:(d+)(?:[._](d+))?(?:[._](d+))?|Mach-O)'
    os_replacement: 'Mac OS X'
  - regex: 'CFNetwork/807\.\d.* Darwin/16\.(\d)'
    os_replacement: 'macOS'
    os_v1_replacement: '10'
    os_v2_replacement: '12'
    os_v3_replacement: '$1'
  - regex: 'CFNetwork/807\.(\d)'
    os_replacement: 'macOS'
    os_v1_replacement: '10'
    os_v2_replacement: '12'
    os_v3_replacement: '$1'
  - regex: ' Darwin/16\.0\.0.*\((?:i386|x86_64)\)'
    os_replacement: 'macOS'
    os_v1_replacement: '10'
    os_v2_replacement: '12'
  - regex: 'CFNetwork/760\.\d.* Darwin/15\.(\d)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '11'
    os_v3_replacement: '$1'
  - regex: 'CFNetwork/760\.(\d)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '11'
    os_v3_replacement: '$1'
  - regex: ' Darwin/15\.0\.0.*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '11'
  - regex: 'CFNetwork/720\.(\d).* Darwin/14\.\d+'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '10'
    os_v3_replacement: '$1'
  - regex: ' Darwin/14\.0\.0.*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '10'
  - regex: ' Darwin/14\.1\.0.*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '10'
    os_v3_replacement: '2'
  - regex: ' Darwin/14\.(\d)\.0.*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '10'
    os_v3_replacement: '$1'
  - regex: ' (Dar)(win)/(13)\.0\.2.*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '9'
    os_v3_replacement: '1'
  - regex: ' (Dar)(win)/(13)\.1\.0.*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '9'
    os_v3_replacement: '2'
  - regex: ' (Dar)(win)/(13)\.2\.0.*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '9'
    os_v3_replacement: '3'
  - regex: ' (Dar)(win)/(13)\.3\.0.*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '9'
    os_v3_replacement: '4'
  - regex: ' (Dar)(win)/(13).(\d+).*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '9'
  - regex: 'CFNetwork/596\.(\d).* Darwin/12'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '8'
    os_v3_replacement: '$1'
  - regex: ' (Dar)(win)/(12).(\d+).*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '8'
  - regex: 'CFNetwork/520\.(\d).* Darwin/11'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '7'
    os_v3_replacement: '$1'
  - regex: ' (Dar)(win)/(11).(\d+).*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '7'
  - regex: ' (Dar)(win)/(10).(\d+).*\((?:i386|x86_64)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '6'
  - regex: ' (Dar)(win)/(9).(\d+).*\((?:i386|x86_64|Power Macintosh)\)'
    os_replacement: 'Mac OS X'
    os_v1_replacement: '10'
    os_v2_replacement: '5'
  - regex: '(?:PPC|Intel) (Mac OS X)'
  - regex: 'Mac_PowerPC'
    os_replacement: 'Mac OS'
  - regex: 'Macintosh'
    os_replacement: 'Mac OS'
  - regex: '(Apple\s?TV).* CPU OS (\d+)[_\.](\d+)(?:[_\.](\d+))?'
    os_replacement: 'ATV OS X'
  - regex: '(Apple\s?TV)[\d,]*(?:/(d+)(?:.(d+))?(?:.([a-zd]+))?)?'
    os_replacement: 'ATV OS X'
  - regex: '(CPU[ +]OS|[iI]Phone[ +]OS|CPU[ +]iPhone)[ +]+(\d+)[_\.](\d+)(?:[_\.](\d+))?'
    os_replacement: 'iOS'
  - regex: '(iPhone|iPad|iPod); Opera'
    os_replacement: 'iOS'
  - regex: '(iPhone|iPad|iPod).*Mac OS X.*Version/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    os_replacement: 'iOS'
  - regex: '(CF)(Network)/808\.(\d).* Darwin/(16)\.'
    os_replacement: 'iOS'
    os_v1_replacement: '10'
  - regex: 'CFNetwork/(?:79(0)\.\d).* Darwin/(16)\.'
    os_replacement: 'iOS'
    os_v1_replacement: '10'
    os_v2_replacement: '$1$2'
  - regex: 'CFNetwork/758\.(\d)'
    os_replacement: 'iOS'
    os_v1_replacement: '9'
    os_v2_replacement: '$1'
  - regex: 'CFNetwork/711\.(\d).* Darwin/(14)\.\d+'
    os_replacement: 'iOS'
    os_v1_replacement: '8'
    os_v2_replacement: '$1'
  - regex: '(CFNetwork)/709\.1'
    os_replacement: 'iOS'
    os_v1_replacement: '8'
    os_v2_replacement: '0.b5'
  - regex: '(CFNetwork)/6(7)2\.(0)\.(?:2|8)'
    os_replacement: 'iOS'
  - regex: '(CF)(Network)/6(7)(2)\.1\.15'
    os_replacement: 'iOS'
    os_v1_replacement: '7'
    os_v2_replacement: '1'
  - regex: '(CFNetwork)/6(7)2\.(1)\.(1)4'
    os_replacement: 'iOS'
  - regex: '(CFNetwork)/6(7)2\.(1)\.13'
    os_replacement: 'iOS'
  - regex: '(CFNetwork)/(6)09\.(1)\.4'
    os_replacement: 'iOS'
  - regex: '(CFNetwork)/(6)(0)9'
    os_replacement: 'iOS'
  - regex: '(CFNetwork)/(5)48\.(0)\.4'
    os_replacement: 'iOS'
    os_v3_replacement: '1'
  - regex: '(CFNetwork)/(5)48\.(\d)'
    os_replacement: 'iOS'
  - regex: '(CFNetwork)/(4)85\.1(3)\.9'
    os_replacement: 'iOS'
  - regex: 'CFNetwork/7.* Darwin/(15)\.\d+'
    os_replacement: 'iOS'
    vi: '9'
  - regex: 'CFNetwork/7.* Darwin/(14)\.\d+'
    os_replacement: 'iOS'
    os_v1_replacement: '8'
  - regex: 'CFNetwork/6.* Darwin/(14)\.\d+'
    os_replacement: 'iOS'
    os_v1_replacement: '7'
  - regex: 'CFNetwork/.* Darwin/(13)\.\d+'
    os_replacement: 'iOS'
    os_v1_replacement: '6'
  - regex: 'CFNetwork/.* Darwin/(11)\.\d+'
    os_replacement: 'iOS'
    os_v1_replacement: '5'
  - regex: 'CFNetwork/.* Darwin/(10)\.\d+'
    os_replacement: 'iOS'
    os_v1_replacement: '4'
  - regex: 'CFNetwork/.* Darwin/(9)\.\d+'
    os_replacement: 'iOS'
    os_v1_replacement: '1'
  - regex: '\b(iOS[ /]|iOS; |iPhone(?:/| v|[ _]OS[/,]|; | OS : |\d,\d/|\d,\d; )|iPad/)(\d{1,2})[_\.](\d{1,2})(?:[_\.](\d+))?'
    os_replacement: 'iOS'
  - regex: '\((iOS); '
  - regex: '(tvOS)/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    os_replacement: 'tvOS'
  - regex: '(CrKey)(?:[/](d+)(?:.(d+))?(?:.([a-zd]+))?)?'
    os_replacement: 'Chromecast'
  - regex: '(CrOS) [a-z0-9_]+ (d+)(?:.(d+))?(?:.([a-zd]+))?'
    os_replacement: 'Chrome OS'
  - regex: '(Symbian[Oo][Ss])[/ ](d+)(?:.(d+))?(?:.([a-zd]+))?'
    os_replacement: 'Symbian OS'
  - regex: '(Symbian/3).+NokiaBrowser/7\.3'
    os_replacement: 'Symbian^3 Anna'
  - regex: '(Symbian/3).+NokiaBrowser/7\.4'
    os_replacement: 'Symbian^3 Belle'
  - regex: '(Symbian/3)'
    os_replacement: 'Symbian^3'
  - regex: '\b(Series 60|SymbOS|S60Version|S60V\d|S60\b)'
    os_replacement: 'Symbian OS'
  - regex: '(MeeGo)'
  - regex: 'Symbian [Oo][Ss]'
    os_replacement: 'Symbian OS'
  - regex: 'Series40;'
    os_replacement: 'Nokia Series 40'
  - regex: 'Series30Plus;'
    os_replacement: 'Nokia Series 30 Plus'
  - regex: '(BB10);.+Version/(d+)(?:.(d+))?(?:.([a-zd]+))?'
    os_replacement: 'BlackBerry OS'
  - regex: '(Black[Bb]erry)[0-9a-z]+/(d+)(?:.(d+))?(?:.(d+))?(?:.(d+))?'
    os_replacement: 'BlackBerry OS'
  - regex: 'Opera.*(Black[Bb]erry)'
    os_replacement: 'BlackBerry OS'
  - regex: '(Black[Bb]erry).+Version/(d+)(?:.(d+))?(?:.(d+))?(?:.(d+))?'
    os_replacement: 'BlackBerry OS'
  - regex: '(RIM Tablet OS) (d+)(?:.(d+))?(?:.([a-zd]+))?'
    os_replacement: 'BlackBerry Tablet OS'
  - regex: '(Play[Bb]ook)'
    os_replacement: 'BlackBerry Tablet OS'
  - regex: '(Black[Bb]erry)'
    os_replacement: 'BlackBerry OS'
  - regex: '\((?:Mobile|Tablet);.+Gecko/18.0 Firefox/\d+\.\d+'
    os_replacement: 'Firefox OS'
    os_v1_replacement: '1'
    os_v2_replacement: '0'
    os_v3_replacement: '1'
  - regex: '\((?:Mobile|Tablet);.+Gecko/18.1 Firefox/\d+\.\d+'
    os_replacement: 'Firefox OS'
    os_v1_replacement: '1'
    os_v2_replacement: '1'
  - regex: '\((?:Mobile|Tablet);.+Gecko/26.0 Firefox/\d+\.\d+'
    os_replacement: 'Firefox OS'
    os_v1_replacement: '1'
    os_v2_replacement: '2'
  - regex: '\((?:Mobile|Tablet);.+Gecko/28.0 Firefox/\d+\.\d+'
    os_replacement: 'Firefox OS'
    os_v1_replacement: '1'
    os_v2_replacement: '3'
  - regex: '\((?:Mobile|Tablet);.+Gecko/30.0 Firefox/\d+\.\d+'
    os_replacement: 'Firefox OS'
    os_v1_replacement: '1'
    os_v2_replacement: '4'
  - regex: '\((?:Mobile|Tablet);.+Gecko/32.0 Firefox/\d+\.\d+'
    os_replacement: 'Firefox OS'
    os_v1_replacement: '2'
    os_v2_replacement: '0'
  - regex: '\((?:Mobile|Tablet);.+Gecko/34.0 Firefox/\d+\.\d+'
    os_replacement: 'Firefox OS'
    os_v1_replacement: '2'
    os_v2_replacement: '1'
  - regex: '\((Mobile|Tablet);.+Firefox/\d+\.\d+'
    os_replacement: 'Firefox OS'
  - regex: '(BREW)[ /](d+)(?:.(d+))?(?:.([a-zd]+))?'
  - regex: '(BREW);'
  - regex: '(Brew MP|BMP)[ /](d+)(?:.(d+))?(?:.([a-zd]+))?'
    os_replacement: 'Brew MP'
  - regex: 'BMP;'
    os_replacement: 'Brew MP'
  - regex: '(GoogleTV)(?: (d+)(?:.(d+))?(?:.([a-zd]+))?|/[\da-z]+)'
  - regex: '(WebTV)/(\d+).(\d+)'
  - regex: '(Palm ?OS)'
    os_replacement: 'PalmOS'
  - regex: 'Xiino(?:.*v\. (\d+[\.\d]+))?'
    os_replacement: 'PalmOS'
  - regex: '(VRE);'
  - regex: 'HbbTV/\d+\.\d+\.\d+ \( ;(LG)E ;NetCast 4.0'
    os_v1_replacement: '2013'
  - regex: 'HbbTV/\d+\.\d+\.\d+ \( ;(LG)E ;NetCast 3.0'
    os_v1_replacement: '2012'
  - regex: 'HbbTV/1.1.1 \(;;;;;\) Maple_2011'
    os_replacement: 'Samsung'
    os_v1_replacement: '2011'
  - regex: 'HbbTV/\d+\.\d+\.\d+ \(;(Samsung);SmartTV([0-9]{4});.*FXPDEUC'
    os_v2_replacement: 'UE40F7000'
  - regex: 'HbbTV/\d+\.\d+\.\d+ \(;(Samsung);SmartTV([0-9]{4});.*MST12DEUC'
    os_v2_replacement: 'UE32F4500'
  - regex: 'HbbTV/1.1.1 \(; (Philips);.*NETTV/4'
    os_v1_replacement: '2013'
  - regex: 'HbbTV/1.1.1 \(; (Philips);.*NETTV/3'
    os_v1_replacement: '2012'
  - regex: 'HbbTV/1.1.1 \(; (Philips);.*NETTV/2'
    os_v1_replacement: '2011'
  - regex: 'HbbTV/\d+\.\d+\.\d+.*(firetv)-firefox-plugin (\d+).(\d+).(\d+)'
    os_replacement: 'FireHbbTV'
  - regex: 'HbbTV/\d+\.\d+\.\d+ \(.*; ?([a-zA-Z]+) ?;.*(201[1-9]).*\)'
  - regex: '(webOS\.TV)-(\d+)'
    os_replacement: 'webOS TV'
  - regex: '(Web0S)'
    os_replacement: 'webOS TV'
  - regex: '\b(Sailfish|Haiku|BeOS)\b'
  - regex: '(RISC OS)(?:-NC)?(?:[ /](d+)(?:.(d+))?(?:.([a-zd]+))?)?'
  - regex: '(Nintendo Wii)'
  - regex: '(Xbox|KIN\.(?:One|Two))'
    name: 'Xbox'
    os_v1_replacement: '360'
  - regex: 'PlayStation (\d+)'
    regex_flag: 'i'
    os_replacement: 'Playstation $1'
  - regex: '(Nitro|Nintendo) ([3]?DS[i]?)'
    os_replacement: 'Nintendo Mobile'
  - regex: 'PlayStation (Portable|Vita)'
    os_replacement: 'PlayStation $1'
  - regex: '(Fedora|Ubuntu|Red Hat|(?:Free|Open|Net|\b)BSD|[KLX]?ubuntu|Arch ?Linux|Bada|CentOS|Debian|Fedora|Gentoo|HopenOS|Kindle|Knoppix|Mageia|Mandriva|Mint|openSUSE|PCLinuxOS|Puppy|Sabayon|Slackware|SUSE|BackTrack|SunOS|Solaris|AIX|HP-UX|DragonFly|Syllable|IRIX)\b(?:(?: Enterprise)? Linux)?(?:[ /\-](d+)(?:.(d+))?(?:.(d+))?(?:.(d+))?)?'
  - regex: 'OSF1(?:[/ ]?v?(d+)(?:.(d+))?(?:.([a-zd]+))?)?'
    os_replacement: 'OSF1'
  - regex: '(Windows|Android|WeTab|Maemo|\bOS/2\b|WinGogi|GOGI)'
  - regex: '(Linux)[ /](d+)(?:.(d+))?(?:.([a-zd]+))?.*gentoo'
    os_replacement: 'Gentoo'
  - regex: '(Linux)(?:[ /](d+)(?:.(d+))?(?:.([a-zd]+))?)?'
  - regex: 'redhat-linux-gnu'
    os_replacement: 'Red Hat'
  - regex: '(X11;|linux-gnu)'
    os_replacement: 'Linux'
device_parsers:
  - regex: '\bSmartWatch *\( *([^;]+) *; *([^;]+) *;'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: 'Android Application[^\-]+ - (Sony) ?(Ericsson)? (.+) \w+ - '
    device_replacement: '$1 $2'
    brand_replacement: '$1$2'
    model_replacement: '$3'
  - regex: 'Android Application[^\-]+ - (?:HTC|HUAWEI|LGE|LENOVO|MEDION|TCT) (HTC|HUAWEI|LG|LENOVO|MEDION|ALCATEL)[ _\-](.+) \w+ - '
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: 'Android Application[^\-]+ - ([^ ]+) (.+) \w+ - '
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(HONOR )?([^;]+) Build/(Honor|HONOR)'
    device_replacement: '$1$2'
    brand_replacement: 'Huawei'
    model_replacement: '$2'
  - regex: '; *(HUAWEI |Huawei-)?([UY][^;/]+) Build/(?:Huawei|HUAWEI)([UY][^\);]+)\)'
    device_replacement: '$1$2'
    brand_replacement: 'Huawei'
    model_replacement: '$2'
  - regex: '; *([^;/]+) Build[/ ]Huawei(MT1-U06|[A-Z]+\d+[^\);]+)[^\);]*\)'
    device_replacement: '$1'
    brand_replacement: 'Huawei'
    model_replacement: '$2'
  - regex: '; *(S7|M860|H60-L\d+|Honor|Honor .+?) Build[ /]'
    device_replacement: '$1'
    brand_replacement: 'Huawei'
    model_replacement: '$1'
  - regex: '; *((?:HUAWEI|Huawei)[ \-]?)(MediaPad) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Huawei'
    model_replacement: '$2'
  - regex: '; *((?:HUAWEI[ _]?|Huawei[ _])?Ascend[ _])([^;/]+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Huawei'
    model_replacement: '$2'
  - regex: '; *((?:HUAWEI|Huawei)[ _\-]?)((?:G700-|MT-)[^;/]+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Huawei'
    model_replacement: '$2'
  - regex: '; *((?:HUAWEI|Huawei)[ _\-]?)([^;/]+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Huawei'
    model_replacement: '$2'
  - regex: '; *(MediaPad[^;]+|SpringBoard) Build/Huawei'
    device_replacement: '$1'
    brand_replacement: 'Huawei'
    model_replacement: '$1'
  - regex: '; *([^;]+) Build/(?:Huawei|HUAWEI)'
    device_replacement: '$1'
    brand_replacement: 'Huawei'
    model_replacement: '$1'
  - regex: '; *([Uu])([89]\d{3}) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Huawei'
    model_replacement: 'U$2'
  - regex: '; *(Ideos|IDEOS|HONOR) ([^;/]+\s*|\s*)Build'
    device_replacement: 'Huawei $1 $2'
    brand_replacement: 'Huawei'
    model_replacement: '$1 $2'
  - regex: '; *(?:[^;]+) Build/(Orange[^\s\)]+)'
    device_replacement: 'Huawei $1'
    brand_replacement: 'Huawei'
    model_replacement: '$1'
  - regex: '; *(Orange Daytona|Pulse|Pulse Mini|Vodafone 858|C8500|C8600|C8650|C8660|Nexus 6P) Build'
    device_replacement: 'Huawei $1'
    brand_replacement: 'Huawei'
    model_replacement: '$1'
  - regex: '; *(SAMSUNG |Samsung )?((?:Galaxy (?:Note II|S\d)|GT-I9082|GT-I9205|GT-N7\d{3}|SM-N9005)[^;/]*)\/?[^;/]* Build/'
    device_replacement: '$1$2'
    brand_replacement: 'Samsung'
    model_replacement: '$2'
  - regex: '; *(Google )?(Nexus [Ss](?: 4G)?) Build/'
    device_replacement: '$1$2'
    brand_replacement: 'Samsung'
    model_replacement: '$2'
  - regex: '; *(SAMSUNG |Samsung )([^\/]*)\/[^ ]* Build/'
    device_replacement: '$1$2'
    brand_replacement: 'Samsung'
    model_replacement: '$2'
  - regex: '; *(Galaxy(?: Ace| Nexus| ACE| S ?II+|Nexus S| with MCR 1.2| Mini Plus 4G)?) Build/'
    device_replacement: '$1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: '; *(SAMSUNG[ _\-] *)+([^;/]+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Samsung'
    model_replacement: '$2'
  - regex: '; *(SAMSUNG-)?(GT\-[BINPS]\d{4}[^\/]*)(\/[^ ]*) Build'
    device_replacement: '$1$2$3'
    brand_replacement: 'Samsung'
    model_replacement: '$2'
  - regex: '(?:; *|^)((?:GT\-[BIiNPS]\d{4}|I9\d{2}0[A-Za-z\+]?\b)[^;/\)]*?)(?:Build|Linux|MIUI|[;/\)])'
    device_replacement: '$1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: '; (SAMSUNG-)([A-Za-z0-9\-]+).* Build/'
    device_replacement: '$1$2'
    brand_replacement: 'Samsung'
    model_replacement: '$2'
  - regex: '; *((?:SCH|SGH|SHV|SHW|SPH|SC|SM)\-[A-Za-z0-9 ]+)(/?[^ ]*)? Build'
    device_replacement: '$1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: ' ((?:SCH)\-[A-Za-z0-9 ]+)(/?[^ ]*)? Build'
    device_replacement: '$1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: '; *(Behold ?(?:2|II)|YP\-G[^;/]+|SCL21|I9300) Build'
    device_replacement: 'Samsung $1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: '; *(EK-GC\d{3}) Build'
    device_replacement: 'Samsung $1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: '; *(AC07\d{2}[A-Z]|BC9710AM|EL72B|ER71B|LC(?:07|08|09|10)\d{2}[A-Z]?|MT(?:07|08|09|10|78)\d{2}[A-Z]?|OC1020A|QS(?:07|08|10|97)\d{2}[A-Z]|RC(?:07|08|10|13|78|97)\d{2}[A-Z]|TS(?:08|10)\d{2}[A-Z]|VM(?:07|10)\d{2}[A-Z]) +Build/'
    device_replacement: '3Q $1'
    brand_replacement: '3Q'
    model_replacement: '$1'
  - regex: '; *(?:3Q_)([^;/]+) +Build'
    device_replacement: '3Q $1'
    brand_replacement: '3Q'
    model_replacement: '$1'
  - regex: 'Android [34].*; *(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700(?: Lite| 3G)?|A701|B1-A71|A1-\d{3}(?:F?HD)?|A3-A\d{2}(?:F?HD)?|[bB]1-\d{3}(?:F?HD)?) Build'
    device_replacement: '$1'
    brand_replacement: 'Acer'
    model_replacement: '$1'
  - regex: '; *([A-Z]\d{3}) Build.*Acer'
    device_replacement: '$1'
    brand_replacement: 'Acer'
    model_replacement: '$1'
  - regex: 'Android [34].*; *(V360|V370|W500|W500P|W501|W501P|W510|W511|W700|Slider SL101|DA22[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Acer'
    model_replacement: '$1'
  - regex: '(Acer)(?:[ _-]|\/acer; )?([^;\)]+)(?: Build|;)'
    device_replacement: '$1 $2'
    brand_replacement: 'Acer'
    model_replacement: '$2'
  - regex: '; *Acer (Iconia Tab) ([^;/]+) Build'
    device_replacement: '$2'
    brand_replacement: 'Acer'
    model_replacement: '$2'
  - regex: '; *(Z1[123456]0|Z200|Z410|Z500|E3[28]0[^/]*|E39|S5[012]0|S5[56]|Liquid[^;/]*|Iconia A\d+) Build'
    device_replacement: '$1'
    brand_replacement: 'Acer'
    model_replacement: '$1'
  - regex: '; *(Acer |ACER )([^;/]+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Acer'
    model_replacement: '$2'
  - regex: '(ADVAN)[ _]([^\s\)_]+)'
    device_replacement: '$1$2'
    brand_replacement: 'Advan'
    model_replacement: '$2'
  - regex: '; *(Advent )?(Vega(?:Bean|Comb)?).* Build'
    device_replacement: '$1$2'
    brand_replacement: 'Advent'
    model_replacement: '$2'
  - regex: '; *(Ainol )?((?:NOVO|[Nn]ovo)[^;/]+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Ainol'
    model_replacement: '$2'
  - regex: '; *AIRIS[ _\-]?([^/;\)]+) *(?:;|\)|Build)'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Airis'
    model_replacement: '$1'
  - regex: '; *(OnePAD[^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Airis'
    model_replacement: '$1'
  - regex: '; *Airpad[ \-]([^;/]+) Build'
    device_replacement: 'Airpad $1'
    brand_replacement: 'Airpad'
    model_replacement: '$1'
  - regex: '; *(one ?touch) (EVO7|T10|T20) Build'
    device_replacement: 'Alcatel One Touch $2'
    brand_replacement: 'Alcatel'
    model_replacement: 'One Touch $2'
  - regex: '; *(?:USCC[_\-]ALCATEL[_\-]|alcatel[ _])?(?:(?:one[ _\-]?touch[ _\-])|ot[ _\-])([^;/]+);?(?: Build|\))'
    regex_flag: 'i'
    device_replacement: 'Alcatel One Touch $1'
    brand_replacement: 'Alcatel'
    model_replacement: 'One Touch $1'
  - regex: '; *([456]\d{3}[A-Z]) Build'
    regex_flag: 'i'
    device_replacement: 'Alcatel One Touch $1'
    brand_replacement: 'Alcatel'
    model_replacement: 'One Touch $1'
  - regex: '; *(TCL|Alcatel)[ _]([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(Vodafone[ _]Smart[ _]II|Optimus_Madrid|Orange (?:Infinity 8008X|Hiro|Yomi)|Telenor[_ ](?:Smart|One_?Touch)([_ ][^;]*?)?|move 2|BS471|I213|Mobile Sosh|MTC975|smart_a17|7040[NRT]) Build'
    device_replacement: 'Alcatel $1'
    brand_replacement: 'Alcatel'
    model_replacement: '$1'
  - regex: '; *BASE_Lutea_3 Build'
    device_replacement: 'Alcatel One Touch 998'
    brand_replacement: 'Alcatel'
    model_replacement: 'One Touch 998'
  - regex: '; *BASE_Varia Build'
    device_replacement: 'Alcatel One Touch 918D'
    brand_replacement: 'Alcatel'
    model_replacement: 'One Touch 918D'
  - regex: '; *((?:FINE|Fine)\d[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Allfine'
    model_replacement: '$1'
  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)((?:Speed|SPEED).*) Build/'
    device_replacement: '$1$2'
    brand_replacement: 'Allview'
    model_replacement: '$2'
  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)?(A4DUO|A5_Quad|AX1_Shine|AX2_Frenzy|AX4Nano|X\d_Soul|X\d_mini_Soul|X2_Twin|V\d_Viper[^;/]|E2_Living|A5Smiley|P5|P5_Quad|P6_Quad|P6Life) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Allview'
    model_replacement: '$2'
  - regex: '; *(ALLVIEW[ _]?|Allview[ _]?)([^;/]*) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Allview'
    model_replacement: '$2'
  - regex: '; *(A13-MID|Q8H) Build'
    device_replacement: '$1'
    brand_replacement: 'Allwinner'
    model_replacement: '$1'
  - regex: '; *(Allwinner)[ _\-]?([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Allwinner'
    model_replacement: '$1'
  - regex: '; *(A651|A701B?|A702|A703|A705|A706|A707|A711|A712|A713|A717|A722|A785|A801|A802|A803|A901|A902|A1002|A1003|A1006|A1007|A9701|A9703|Q710|Q80) Build'
    device_replacement: '$1'
    brand_replacement: 'Amaway'
    model_replacement: '$1'
  - regex: '; *(?:AMOI|Amoi)[ _]([^;/]+) Build'
    device_replacement: 'Amoi $1'
    brand_replacement: 'Amoi'
    model_replacement: '$1'
  - regex: '^(?:AMOI|Amoi)[ _]([^;/]+) Linux'
    device_replacement: 'Amoi $1'
    brand_replacement: 'Amoi'
    model_replacement: '$1'
  - regex: '; *(A\d{3}W) Build'
    device_replacement: 'Amoi $1'
    brand_replacement: 'Amoi'
    model_replacement: '$1'
  - regex: '; *(?:(MW(?:0[789]|10)[^;/]+)|AOC (U702)) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Aoc'
    model_replacement: '$1$2'
  - regex: '; *(G7|M1013|M1015G|M11[CG]?|M-?12[B]?|M15|M19[G]?|M30[ACQ]?|M31[GQ]|M32|M33[GQ]|M36|M37|M38|M701T|M710|M712B|M713|M715G|M716G|M71(?:G|GS|T)?|M72[T]?|M73[T]?|M75[GT]?|M77G|M79T|M7L|M7LN|M81|M810|M81T|M82|M92|M92KS|M92S|M717G|M721|M722G|M723|M725G|M739|M785|M791|M92SK|M93D) Build'
    device_replacement: 'Aoson $1'
    brand_replacement: 'Aoson'
    model_replacement: '$1'
  - regex: '; *Aoson ([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: 'Aoson $1'
    brand_replacement: 'Aoson'
    model_replacement: '$1'
  - regex: '; *[Aa]panda[ _\-]([^;/]+) Build'
    device_replacement: 'Apanda $1'
    brand_replacement: 'Apanda'
    model_replacement: '$1'
  - regex: '; *(?:ARCHOS|Archos) ?(GAMEPAD.*?)(?: Build|[;/\(\)\-])'
    device_replacement: 'Archos $1'
    brand_replacement: 'Archos'
    model_replacement: '$1'
  - regex: 'ARCHOS; GOGI; ([^;]+);'
    device_replacement: 'Archos $1'
    brand_replacement: 'Archos'
    model_replacement: '$1'
  - regex: '(?:ARCHOS|Archos)[ _;]?(.*?)(?: Build|[;/\(\)\-]|$)'
    device_replacement: 'Archos $1'
    brand_replacement: 'Archos'
    model_replacement: '$1'
  - regex: '; *(A28|A32|A43|A70(?:BHT|CHT|HB|S|X)|A101(?:B|C|IT)|A7EB|A7EB-WK|101G9|80G9) Build'
    device_replacement: 'Archos $1'
    brand_replacement: 'Archos'
    model_replacement: '$1'
  - regex: '; *(PAD-FMD[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Arival'
    model_replacement: '$1'
  - regex: '; *(BioniQ) ?([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Arival'
    model_replacement: '$1 $2'
  - regex: '; *(AN(?:7|8|9|10|13)[A-Z0-9]{1,4}) Build'
    device_replacement: 'Arnova $1'
    brand_replacement: 'Arnova'
    model_replacement: '$1'
  - regex: '; *(AN\d[^;/]+|ARCHM\d+) Build'
    device_replacement: 'Arnova $1'
    brand_replacement: 'Arnova'
    model_replacement: '$1'
  - regex: '; *(?:ARNOVA|Arnova) ?([^;/]+) Build'
    device_replacement: 'Arnova $1'
    brand_replacement: 'Arnova'
    model_replacement: '$1'
  - regex: '; *(?:ASSISTANT )?(AP)-?([1789]\d{2}[A-Z]{0,2}|80104) Build'
    device_replacement: 'Assistant $1-$2'
    brand_replacement: 'Assistant'
    model_replacement: '$1-$2'
  - regex: '; *(A500CG|AST21|ME(?:[13]\d{2})[^;/]+|K0[01][A-Z0-9]|Nexus 10|Nexus 7(?: 2013| LTE)?|Nexus HDX 7|PadFone[^;/]*|Transformer[^;/]*|TF\d{3}[^;/]*|TX201LA|eeepc) Build'
    device_replacement: 'Asus $1'
    brand_replacement: 'Asus'
    model_replacement: '$1'
  - regex: '; *ASUS[ _]*([^;/]+) Build'
    device_replacement: 'Asus $1'
    brand_replacement: 'Asus'
    model_replacement: '$1'
  - regex: '(Avvio)[ _\-]?(pad[a-z0-9\-\.]*)'
    regex_flag: 'i'
    brand_replacement: 'Avvio'
    model_replacement: '$2'
  - regex: '(Avvio)[ _\-]?([a-z0-9\-\.]+)'
    regex_flag: 'i'
    brand_replacement: 'Avvio'
    model_replacement: '$2'
  - regex: '; *Garmin-Asus ([^;/]+) Build'
    device_replacement: 'Garmin-Asus $1'
    brand_replacement: 'Garmin-Asus'
    model_replacement: '$1'
  - regex: '; *(Garminfone) Build'
    device_replacement: 'Garmin $1'
    brand_replacement: 'Garmin-Asus'
    model_replacement: '$1'
  - regex: '; (@TAB-[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Attab'
    model_replacement: '$1'
  - regex: '; *(T-(?:07|[^0]\d)[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Audiosonic'
    model_replacement: '$1'
  - regex: '; AVUS ([^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Avus'
    model_replacement: '$1'
  - regex: ' (?:Axioo[ _\-]([^;/]+)|(pico(?:pad|phone))[ _\-]([^;/]+)) ?(?:Build|;|\))'
    regex_flag: 'i'
    device_replacement: 'Axioo $1$2 $3'
    brand_replacement: 'Axioo'
    model_replacement: '$1$2 $3'
  - regex: '; *(V(?:100|700|800)[^;/]*) Build'
    device_replacement: '$1'
    brand_replacement: 'Azend'
    model_replacement: '$1'
  - regex: '; *(Azumi)[ _]([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'Azumi'
    model_replacement: '$2'
  - regex: '; *(A35S) Build'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Azumi'
    model_replacement: '$1'
  - regex: '; *(IBAK\-[^;/]*) Build'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Bak'
    model_replacement: '$1'
  - regex: '; (AERO J\d+|Aero1021)[\s/].*Build'
    brand_replacement: 'Bangho'
    model_replacement: '$1'
  - regex: '; *(HY5001|HY6501|X12|X21|I5) Build'
    device_replacement: 'Bedove $1'
    brand_replacement: 'Bedove'
    model_replacement: '$1'
  - regex: '; *(JC-[^;/]*) Build'
    device_replacement: 'Benss $1'
    brand_replacement: 'Benss'
    model_replacement: '$1'
  - regex: '; *(BB) ([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Blackberry'
    model_replacement: '$2'
  - regex: '; *(BlackBird)[ _](I8.*) Build'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(BlackBird)[ _](.*) Build'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(Crown) Build'
    device_replacement: 'Blackview $1'
    brand_replacement: 'Blackview'
    model_replacement: '$1'
  - regex: '; *([0-9]+BP[EM][^;/]*|Endeavour[^;/]+) Build'
    device_replacement: 'Blaupunkt $1'
    brand_replacement: 'Blaupunkt'
    model_replacement: '$1'
  - regex: '; *((?:BLU|Blu)[ _\-])([^;/]+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Blu'
    model_replacement: '$2'
  - regex: '; *(?:BMOBILE )?(Blu|(?:DASH|ADVANCE|VIVO|TANK) \d\.\d[^;/]*|STUDIO[^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Blu'
    model_replacement: '$1'
  - regex: '; *(TOUCH\d[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Blusens'
    model_replacement: '$1'
  - regex: '; *(?:Bmobile[ _]+)?(AX[56]\d{2}|AX7[^0]\d) Build'
    device_replacement: 'Bmobile $1'
    brand_replacement: 'Bmobile'
    model_replacement: '$1'
  - regex: '; *([Bb]q)? ?(Aquaris[^;/]*);? Build'
    device_replacement: '$1 $2'
    brand_replacement: 'bq'
    model_replacement: '$2'
  - regex: '; *([Bb]q) ([^;/]+);? Build'
    device_replacement: '$1 $2'
    brand_replacement: 'bq'
    model_replacement: '$2'
  - regex: '; *(Maxwell [^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'bq'
    model_replacement: '$1'
  - regex: '; *((?:B-Tab|B-TAB) ?\d[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Braun'
    model_replacement: '$1'
  - regex: '; *(Broncho) ([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(Caesar|CENTURION(?:[ -]\d)?|CENTVRION2|GLADIATOR(?:[ -]\d)?|GLORY(?:[ -]\d)?|LUXURY(?:[ -]\d)?|SENSUELLE|VICTORY) Build'
    regex_flag: 'i'
    device_replacement: 'Brondi $1'
    brand_replacement: 'Brondi'
    model_replacement: '$1'
  - regex: '; *CAPTIVA ([^;/]+) Build'
    device_replacement: 'Captiva $1'
    brand_replacement: 'Captiva'
    model_replacement: '$1'
  - regex: '; *(C771|CAL21|IS11CA) Build'
    device_replacement: '$1'
    brand_replacement: 'Casio'
    model_replacement: '$1'
  - regex: '; *(?:Cat|CAT) ([^;/]+) Build'
    device_replacement: 'Cat $1'
    brand_replacement: 'Cat'
    model_replacement: '$1'
  - regex: '; *(B15Q?) Build'
    device_replacement: 'Cat $1'
    brand_replacement: 'Cat'
    model_replacement: '$1'
  - regex: '; *(?:Cat)(Nova.*) Build'
    device_replacement: 'Cat $1'
    brand_replacement: 'Cat'
    model_replacement: '$1'
  - regex: '; *(INM8002KP|ADM8000KP_[AB]) Build'
    device_replacement: '$1'
    brand_replacement: 'Cat'
    model_replacement: 'Tablet PHOENIX 8.1J0'
  - regex: '; *(?:[Cc]elkon[ _\*]|CELKON[ _\*])([^;/\)]+) ?(?:Build|;|\))'
    device_replacement: '$1'
    brand_replacement: 'Celkon'
    model_replacement: '$1'
  - regex: 'Build/(?:[Cc]elkon)+_?([^;/_\)]+)'
    device_replacement: '$1'
    brand_replacement: 'Celkon'
    model_replacement: '$1'
  - regex: '; *(CT)-?(\d+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Celkon'
    model_replacement: '$1$2'
  - regex: '; *(A19|A19Q|A105|A107[^;/\)]*|A354C) ?(?:Build|;|\))'
    device_replacement: '$1'
    brand_replacement: 'Celkon'
    model_replacement: '$1'
  - regex: '; *(TPC[0-9]{4,5}) Build'
    device_replacement: '$1'
    brand_replacement: 'ChangJia'
    model_replacement: '$1'
  - regex: '; *(Cloudfone)[ _](Excite)([^ ][^;/]+) Build'
    device_replacement: '$1 $2 $3'
    brand_replacement: 'Cloudfone'
    model_replacement: '$1 $2 $3'
  - regex: '; *(Excite|ICE)[ _](\d+[^;/]+) Build'
    device_replacement: 'Cloudfone $1 $2'
    brand_replacement: 'Cloudfone'
    model_replacement: 'Cloudfone $1 $2'
  - regex: '; *(Cloudfone|CloudPad)[ _]([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Cloudfone'
    model_replacement: '$1 $2'
  - regex: '; *((?:Aquila|Clanga|Rapax)[^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Cmx'
    model_replacement: '$1'
  - regex: '; *(?:CFW-|Kyros )?(MID[0-9]{4}(?:[ABC]|SR|TV)?)(\(3G\)-4G| GB 8K| 3G| 8K| GB)? *(?:Build|[;\)])'
    device_replacement: 'CobyKyros $1$2'
    brand_replacement: 'CobyKyros'
    model_replacement: '$1$2'
  - regex: '; *([^;/]*)Coolpad[ _]?([^;/]+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Coolpad'
    model_replacement: '$1$2'
  - regex: '; *(801E[MS]?) Build'
    device_replacement: '$1'
    brand_replacement: 'Coolpad'
    model_replacement: '$1'
  - regex: '; *(CUBE[ _])?([KU][0-9]+ ?GT.*|A5300) Build'
    regex_flag: 'i'
    device_replacement: '$1$2'
    brand_replacement: 'Cube'
    model_replacement: '$2'
  - regex: '; *CUBOT[ _]([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Cubot'
    model_replacement: '$1'
  - regex: '; *(BOBBY|GT[89]\d|P6|P7|P9|P10|S108|S168|S200|S208|S222|S308|s350|T9|X6|X9) Build'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Cubot'
    model_replacement: '$1'
  - regex: '; *(Dslide ?[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Danew'
    model_replacement: '$1'
  - regex: '; *(XCD)[ _]?(28|35) Build'
    device_replacement: 'Dell $1$2'
    brand_replacement: 'Dell'
    model_replacement: '$1$2'
  - regex: '; *(001DL) Build'
    device_replacement: 'Dell $1'
    brand_replacement: 'Dell'
    model_replacement: 'Streak'
  - regex: '; *(?:Dell|DELL) (Streak) Build'
    device_replacement: 'Dell $1'
    brand_replacement: 'Dell'
    model_replacement: 'Streak'
  - regex: '; *(101DL|GS01|Streak Pro[^;/]*) Build'
    device_replacement: 'Dell $1'
    brand_replacement: 'Dell'
    model_replacement: 'Streak Pro'
  - regex: '; *([Ss]treak ?7) Build'
    device_replacement: 'Dell $1'
    brand_replacement: 'Dell'
    model_replacement: 'Streak 7'
  - regex: '; *(Mini-3iX) Build'
    device_replacement: 'Dell $1'
    brand_replacement: 'Dell'
    model_replacement: '$1'
  - regex: '; *(?:Dell|DELL)[ _](Aero|Venue|Thunder|Mini.*|Streak[ _]Pro) Build'
    device_replacement: 'Dell $1'
    brand_replacement: 'Dell'
    model_replacement: '$1'
  - regex: '; *Dell[ _]([^;/]+) Build'
    device_replacement: 'Dell $1'
    brand_replacement: 'Dell'
    model_replacement: '$1'
  - regex: '; *Dell ([^;/]+) Build'
    device_replacement: 'Dell $1'
    brand_replacement: 'Dell'
    model_replacement: '$1'
  - regex: '; *(?:PO
    device_replacement: '$1'
    brand_replacement: 'Denver'
    model_replacement: '$1'
  - regex: '; *(iP[789]\d{2}(?:-3G)?|IP10\d{2}(?:-8GB)?) Build'
    device_replacement: '$1'
    brand_replacement: 'Dex'
    model_replacement: '$1'
  - regex: '; *(AirTab)[ _\-]([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'DNS'
    model_replacement: '$1 $2'
  - regex: '; *(F\-\d[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Fujitsu'
    model_replacement: '$1'
  - regex: '; *(HT-03A) Build'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: 'Magic'
  - regex: '; *(HT\-\d[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: '; *(L\-\d[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'LG'
    model_replacement: '$1'
  - regex: '; *(N\-\d[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Nec'
    model_replacement: '$1'
  - regex: '; *(P\-\d[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Panasonic'
    model_replacement: '$1'
  - regex: '; *(SC\-\d[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: '; *(SH\-\d[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Sharp'
    model_replacement: '$1'
  - regex: '; *(SO\-\d[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'SonyEricsson'
    model_replacement: '$1'
  - regex: '; *(T\-0[12][^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Toshiba'
    model_replacement: '$1'
  - regex: '; *(?:DOOGEE[ -]([^;/]+)|([^;/]+[ -]DG\d{3,4}[A-Z]?)|(DG800));? +Build'
    device_replacement: '$1$2$3'
    brand_replacement: 'Doogee'
    model_replacement: '$1$2$3'
  - regex: '; *Doro (.*?) Build'
    device_replacement: '$1'
    brand_replacement: 'Doro'
    model_replacement: '$1'
  - regex: '; *(DOOV)[ _]([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'DOOV'
    model_replacement: '$2'
  - regex: '; *(Elephone)[ -]?([^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Elephone'
    model_replacement: '$2$3'
  - regex: '; *(Enot|ENOT)[ -]?([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Enot'
    model_replacement: '$2'
  - regex: '; *[^;/]+ Build/(?:CROSS|Cross)+[ _\-]([^\)]+)'
    device_replacement: 'CROSS $1'
    brand_replacement: 'Evercoss'
    model_replacement: 'Cross $1'
  - regex: '; *(CROSS|Cross)[ _\-]([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Evercoss'
    model_replacement: 'Cross $2'
  - regex: '; *(A7[STV].?|A10Q|A26[BC]|A28[BMS]|A33A|A5C|A5[ST]|A65A|A66[AB]|A7E|A80A|AT1[ACG]\*?) Build'
    device_replacement: '$1'
    brand_replacement: 'Evercoss'
    model_replacement: '$1'
  - regex: '; *Explay[_ ](.+?)(?:[\)]| Build)'
    device_replacement: '$1'
    brand_replacement: 'Explay'
    model_replacement: '$1'
  - regex: '; *(FP1|FP1U) Build'
    device_replacement: '$1'
    brand_replacement: 'Fairphone'
    model_replacement: '$1'
  - regex: '; *(IQ.*) Build'
    device_replacement: '$1'
    brand_replacement: 'Fly'
    model_replacement: '$1'
  - regex: '; *(Fly|FLY)[ _](IQ[^;]+|F[34]\d+[^;]*|Phoenix 2);? Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Fly'
    model_replacement: '$2'
  - regex: '; *(M532|Q572|FJL21) Build/'
    device_replacement: '$1'
    brand_replacement: 'Fujitsu'
    model_replacement: '$1'
  - regex: '; *(G1) Build'
    device_replacement: '$1'
    brand_replacement: 'Galapad'
    model_replacement: '$1'
  - regex: '; *(Geeksphone) ([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(G[^F]?FIVE) ([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Gfive'
    model_replacement: '$2'
  - regex: '; *(A5\(GOL\)) Build'
    device_replacement: '$1'
    brand_replacement: 'Gfive'
    model_replacement: '$1'
  - regex: '; *(Gionee)[ _\-]([^;/]+)(?:/[^;/]+)? Build'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'Gionee'
    model_replacement: '$2'
  - regex: '; *(GN\d+[A-Z]?|INFINITY_PASSION|Ctrl_V1|Pioneer_P[123]S?|P4S?|S5\.[15]) Build'
    device_replacement: 'Gionee $1'
    brand_replacement: 'Gionee'
    model_replacement: '$1'
  - regex: '; *(E3|E7) Build/J'
    device_replacement: 'Gionee $1'
    brand_replacement: 'Gionee'
    model_replacement: '$1'
  - regex: '; *((?:FONE|QUANTUM|INSIGNIA|ARIES)[ _]\d+[^;/]*|PLAYTAB) Build'
    device_replacement: 'GoClever $1 $2'
    brand_replacement: 'GoClever'
    model_replacement: '$1 $2'
  - regex: '; *GOCLEVER ([^;/]+) Build'
    device_replacement: 'GoClever $1'
    brand_replacement: 'GoClever'
    model_replacement: '$1'
  - regex: '; *(Glass \d+) Build'
    device_replacement: '$1'
    brand_replacement: 'Google'
    model_replacement: '$1'
  - regex: '; *(Pixel \w+) Build'
    device_replacement: '$1'
    brand_replacement: 'Google'
    model_replacement: '$1'
  - regex: '; *(Pixel) Build'
    device_replacement: '$1'
    brand_replacement: 'Google'
    model_replacement: '$1'
  - regex: '; *(GSmart)[ -]([^/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Gigabyte'
    model_replacement: '$1 $2'
  - regex: '; *(Gigaset)[ ]([^/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(SL930[^/]*) Build'
    device_replacement: 'Gigaset $1'
    brand_replacement: 'Gigaset'
    model_replacement: '$1'
  - regex: '; *(G-TiDE)[ ]([^/]+) Build'
    regex_flag: i
    device_replacement: 'G-Tide $2'
    brand_replacement: 'G-Tide'
    model_replacement: '$2'
  - regex: '; *(imx5[13]_[^/]+) Build'
    device_replacement: 'Freescale $1'
    brand_replacement: 'Freescale'
    model_replacement: '$1'
  - regex: '; *Haier[ _\-]([^/]+) Build'
    device_replacement: 'Haier $1'
    brand_replacement: 'Haier'
    model_replacement: '$1'
  - regex: '; *(HW-[^/]+|W867) Build'
    device_replacement: 'Haier $1'
    brand_replacement: 'Haier'
    model_replacement: '$1'
  - regex: '; *(PAD1016) Build'
    device_replacement: 'Haier $1'
    brand_replacement: 'Haier'
    model_replacement: '$1'
  - regex: '; *(M701|M7|M8|M9) Build'
    device_replacement: 'Haipad $1'
    brand_replacement: 'Haipad'
    model_replacement: '$1'
  - regex: '; *(SN\d+T[^;\)/]*|HSG12\d+)(?: Build|[;\)])'
    device_replacement: 'Hannspree $1'
    brand_replacement: 'Hannspree'
    model_replacement: '$1'
  - regex: 'Build/HCL ME Tablet ([^;\)]+)[\);]'
    device_replacement: 'HCLme $1'
    brand_replacement: 'HCLme'
    model_replacement: '$1'
  - regex: '; *([^;\/]+) Build/HCL'
    device_replacement: 'HCLme $1'
    brand_replacement: 'HCLme'
    model_replacement: '$1'
  - regex: '; *(MID-?\d{4}C[EM]) Build'
    device_replacement: 'Hena $1'
    brand_replacement: 'Hena'
    model_replacement: '$1'
  - regex: '; *(EG\d{2,}|HS-[^;/]+|MIRA[^;/]+|AD683G) Build'
    device_replacement: 'Hisense $1'
    brand_replacement: 'Hisense'
    model_replacement: '$1'
  - regex: '; *(andromax[^;/]+) Build'
    regex_flag: 'i'
    device_replacement: 'Hisense $1'
    brand_replacement: 'Hisense'
    model_replacement: '$1'
  - regex: '; *(?:AMAZE[ _](S\d+)|(S\d+)[ _]AMAZE) Build'
    device_replacement: 'AMAZE $1$2'
    brand_replacement: 'hitech'
    model_replacement: 'AMAZE $1$2'
  - regex: '; *(PlayBook|Slate \d+(?: Pro)?) Build'
    device_replacement: 'HP $1'
    brand_replacement: 'HP'
    model_replacement: '$1'
  - regex: '; *HP ([^/]+) Build'
    device_replacement: 'HP $1'
    brand_replacement: 'HP'
    model_replacement: '$1'
  - regex: '; *([^/]+_tenderloin) Build'
    device_replacement: 'HP TouchPad'
    brand_replacement: 'HP'
    model_replacement: 'TouchPad'
  - regex: 'USCCHTC(\d+)'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: 'USCC(ADR\d+)'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: '; *(?:HTC)(?:[ _/]((?:(?![ _/;\(\)]|Build|MIUI).)+))(?:[ _/]((?:(?![ _/;\(\)]|HTC|Build|MIUI).)+))?(?:[ _/]((?:(?![ _/;\(\)]|Build|MIUI).)+))?(?:[ _/]((?:(?![/;\)]|Build|MIUI).)+))?(?:[/\\]1\.0 | V|/| +)\d+\.\d[\d\.]+'
    device_replacement: 'HTC $1 $2 $3 $4'
    brand_replacement: 'HTC'
    model_replacement: '$1 $2 $3 $4'
  - regex: '; *(?:HTC[ ;])?(?:HTC(?:_blocked)*)(?:(?:[ _/]|; *)((?:(?![ _/;\(\)\\]|USCCHTC|HTC|Build|MIUI).)+))(?:[ _/]((?:(?![ _/;\(\)\\]|Build|MIUI|1\.0).)+))?(?:[ _/]((?:(?![ _/;\(\)\\]|Build|MIUI|1\.0).)+))?(?:[ _/]((?:(?![/;\)]|Build|MIUI|1\.0).)+))?'
    regex_flag: 'i'
    device_replacement: 'HTC $1 $2 $3 $4'
    brand_replacement: 'HTC'
    model_replacement: '$1 $2 $3 $4'
  - regex: 'HTC Streaming Player [^\/]*/[^\/]*/ htc_([^/]+) /'
    device_replacement: 'HTC $1'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: '(?:[;,] *|^)(?:htccn_chs-)?HTC[ _-]?([^;]+?)(?: *Build|clay|Android|-?Mozilla| Opera| Profile| UNTRUSTED|[;/\(\)]|$)'
    regex_flag: 'i'
    device_replacement: 'HTC $1'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: '; *(0PAJ5|0PCV1|A320a|Z520m|HTL22|801a|A6277|ADR6200|ADR63[03]0[A-Z]*|ADR6350|ADR64[01]0[A-Z]*|ADR6425[A-Z]*|APX515CKT|Desire[^_ ]*|Dream|EndeavorU|Eris|Evo|Flyer|HD2|Hero|HERO200|Hero CDMA|HTL21|Incredible|Inspire[A-Z0-9]*|Legend|Liberty|Nexus ?(?:One|HD2)|Nexus 9|One|One S C2|One[ _]?(?:M|S|V|X\+?)\w*|PC36100|PG06100|PG86100|PJ83100|PM63100|S31HT|Sensation|Wildfire)(?: Build|[/;\(\)])'
    regex_flag: 'i'
    device_replacement: 'HTC $1'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: '; *(ADR6200|ADR6400L|ADR64(?:10|25|)LVW|Amaze|DesireS?|EndeavorU|Eris|EVO|Evo\d[A-Z]+|HD2|IncredibleS?|Inspire[A-Z0-9]*|Inspire[A-Z0-9]*|Sensation[A-Z0-9]*|Wildfire)[ _-](.+?)(?:[/;\)]|Build|MIUI|1\.0)'
    regex_flag: 'i'
    device_replacement: 'HTC $1 $2 $3 $4'
    brand_replacement: 'HTC'
    model_replacement: '$1 $2 $3 $4'
  - regex: '; *HYUNDAI (T\d[^/]*) Build'
    device_replacement: 'Hyundai $1'
    brand_replacement: 'Hyundai'
    model_replacement: '$1'
  - regex: '; *HYUNDAI ([^;/]+) Build'
    device_replacement: 'Hyundai $1'
    brand_replacement: 'Hyundai'
    model_replacement: '$1'
  - regex: '; *(X700|Hold X|MB-6900) Build'
    device_replacement: 'Hyundai $1'
    brand_replacement: 'Hyundai'
    model_replacement: '$1'
  - regex: '; *(?:iBall[ _\-])?(Andi)[ _]?(\d[^;/]*|Uddaan) Build'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'iBall'
    model_replacement: '$1 $2'
  - regex: '; *(IBall)(?:[ _]([^;/]+)|) Build'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'iBall'
    model_replacement: '$2'
  - regex: '; * (3G 7271-HD70) Build'
    device_replacement: '$1'
    brand_replacement: 'iBall'
    model_replacement: '$1'
  - regex: '; *(NT-\d+[^ ;/]*|Net[Tt]AB [^;/]+|Mercury [A-Z]+|iconBIT)(?: S/N:[^;/]+)? Build'
    device_replacement: '$1'
    brand_replacement: 'IconBIT'
    model_replacement: '$1'
  - regex: '; *(IMO)[ _]([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'IMO'
    model_replacement: '$2'
  - regex: '; *i-?mobile[ _]([^/]+) Build/'
    regex_flag: 'i'
    device_replacement: 'i-mobile $1'
    brand_replacement: 'imobile'
    model_replacement: '$1'
  - regex: '; *(i-(?:style|note)[^/]*) Build/'
    regex_flag: 'i'
    device_replacement: 'i-mobile $1'
    brand_replacement: 'imobile'
    model_replacement: '$1'
  - regex: '; *(ImPAD) ?(\d+(?:.)*) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Impression'
    model_replacement: '$1 $2'
  - regex: '; *(Infinix)[ _]([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Infinix'
    model_replacement: '$2'
  - regex: '; *(InFocus)[ _]([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'InFocus'
    model_replacement: '$2'
  - regex: '; *(Informer)[ \-]([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Informer'
    model_replacement: '$2'
  - regex: '; *(TAB) ?([78][12]4) Build'
    device_replacement: 'Intenso $1'
    brand_replacement: 'Intenso'
    model_replacement: '$1 $2'
  - regex: '; *(?:Intex[ _])?(AQUA|Aqua)([ _\.\-])([^;/]+) *(?:Build|;)'
    device_replacement: '$1$2$3'
    brand_replacement: 'Intex'
    model_replacement: '$1 $3'
  - regex: '; *(Auqa Xtreme) *(?: Build|;)'
    device_replacement: '$1$2$3'
    brand_replacement: 'Intex'
    model_replacement: '$1 $3'
  - regex: '; *(?:INTEX|Intex)(?:[_ ]([^\ _;/]+))(?:[_ ]([^\ _;/]+))? *(?:Build|;)'
    device_replacement: '$1 $2'
    brand_replacement: 'Intex'
    model_replacement: '$1 $2'
  - regex: '; *([iI]Buddy)[ _]?(Connect)(?:_|\?_| )?([^;/]*) *(?:Build|;)'
    device_replacement: '$1 $2 $3'
    brand_replacement: 'Intex'
    model_replacement: 'iBuddy $2 $3'
  - regex: '; *(I-Buddy)[ _]([^;/]+) *(?:Build|;)'
    device_replacement: '$1 $2'
    brand_replacement: 'Intex'
    model_replacement: 'iBuddy $2'
  - regex: '; *(iOCEAN) ([^/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'iOCEAN'
    model_replacement: '$2'
  - regex: '; *(TP\d+(?:\.\d+)?\-\d[^;/]+|TU-\d{4}A) Build'
    device_replacement: 'ionik $1'
    brand_replacement: 'ionik'
    model_replacement: '$1'
  - regex: '; *(M702pro) Build'
    device_replacement: '$1'
    brand_replacement: 'Iru'
    model_replacement: '$1'
  - regex: '; *(DE88Plus|MD70) Build'
    device_replacement: '$1'
    brand_replacement: 'Ivio'
    model_replacement: '$1'
  - regex: '; *IVIO[_\-]([^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Ivio'
    model_replacement: '$1'
  - regex: '; *(TPC[-_](?:PA|PX)?[\d\.]+[A-Z]?|JAY-TECH) Build'
    device_replacement: '$1'
    brand_replacement: 'Jaytech'
    model_replacement: '$1'
  - regex: '; *(JY-[^;/]+|G[234]S?) Build'
    device_replacement: '$1'
    brand_replacement: 'JiaYu'
    model_replacement: '$1'
  - regex: '; *(JXD)[ _\-]([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'JXD'
    model_replacement: '$2'
  - regex: '; *Karbonn[ _]?([^;/]+) *(?:Build|;)'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Karbonn'
    model_replacement: '$1'
  - regex: '; *([^;]+) Build/Karbonn'
    device_replacement: '$1'
    brand_replacement: 'Karbonn'
    model_replacement: '$1'
  - regex: '; *(A\d{1,2}(?:\+| Plus)|A[13679]|A1\d|A5 Turbo|A6 Turbo|A7\*|A34|A37|A39|A99[\*i]|ST8|ST10|ST7|Smart Tab3|Smart Tab2|Sparkle V|Titanium S\d+[^;/]*|Titanium Octane[^;/]*) +Build(?:(?!QMobile).)*$'
    device_replacement: '$1'
    brand_replacement: 'Karbonn'
    model_replacement: '$1'
  - regex: '; *Kazam ([^;/]+) *(?:Build|;)'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Kazam'
    model_replacement: '$1'
  - regex: '; *(Tornado \d+|Trooper[^;/]+) *(?:Build|;)'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Kazam'
    model_replacement: '$1'
  - regex: '; *(IS01|IS03|IS05|IS\d{2}SH) Build'
    device_replacement: '$1'
    brand_replacement: 'Sharp'
    model_replacement: '$1'
  - regex: '; *(IS04) Build'
    device_replacement: '$1'
    brand_replacement: 'Regza'
    model_replacement: '$1'
  - regex: '; *(IS06|IS\d{2}PT) Build'
    device_replacement: '$1'
    brand_replacement: 'Pantech'
    model_replacement: '$1'
  - regex: '; *(IS11S) Build'
    device_replacement: '$1'
    brand_replacement: 'SonyEricsson'
    model_replacement: 'Xperia Acro'
  - regex: '; *(IS11CA) Build'
    device_replacement: '$1'
    brand_replacement: 'Casio'
    model_replacement: 'GzOne $1'
  - regex: '; *(IS11LG) Build'
    device_replacement: '$1'
    brand_replacement: 'LG'
    model_replacement: 'Optimus X'
  - regex: '; *(IS11N) Build'
    device_replacement: '$1'
    brand_replacement: 'Medias'
    model_replacement: '$1'
  - regex: '; *(IS11PT) Build'
    device_replacement: '$1'
    brand_replacement: 'Pantech'
    model_replacement: 'MIRACH'
  - regex: '; *(IS12F) Build'
    device_replacement: '$1'
    brand_replacement: 'Fujitsu'
    model_replacement: 'Arrows ES'
  - regex: '; *(IS12M) Build'
    device_replacement: '$1'
    brand_replacement: 'Motorola'
    model_replacement: 'XT909'
  - regex: '; *(IS12S) Build'
    device_replacement: '$1'
    brand_replacement: 'SonyEricsson'
    model_replacement: 'Xperia Acro HD'
  - regex: '; *(ISW11F) Build'
    device_replacement: '$1'
    brand_replacement: 'Fujitsu'
    model_replacement: 'Arrowz Z'
  - regex: '; *(ISW11HT) Build'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: 'EVO'
  - regex: '; *(ISW11K) Build'
    device_replacement: '$1'
    brand_replacement: 'Kyocera'
    model_replacement: 'DIGNO'
  - regex: '; *(ISW11M) Build'
    device_replacement: '$1'
    brand_replacement: 'Motorola'
    model_replacement: 'Photon'
  - regex: '; *(ISW11SC) Build'
    device_replacement: '$1'
    brand_replacement: 'Samsung'
    model_replacement: 'GALAXY S II WiMAX'
  - regex: '; *(ISW12HT) Build'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: 'EVO 3D'
  - regex: '; *(ISW13HT) Build'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: 'J'
  - regex: '; *(ISW?[0-9]{2}[A-Z]{0,2}) Build'
    device_replacement: '$1'
    brand_replacement: 'KDDI'
    model_replacement: '$1'
  - regex: '; *(INFOBAR [^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'KDDI'
    model_replacement: '$1'
  - regex: '; *Kiano ?([^;/]+) Build/'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Kiano'
    model_replacement: '$1'
  - regex: '; *(JOYPAD|Joypad)[ _]([^;/]+) Build/'
    device_replacement: '$1 $2'
    brand_replacement: 'Kingcom'
    model_replacement: '$1 $2'
  - regex: '; *(Vox|VOX|Arc|arc 7|K080) Build/'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Kobo'
    model_replacement: '$1'
  - regex: '\b(Kobo Touch)\b'
    device_replacement: '$1'
    brand_replacement: 'Kobo'
    model_replacement: '$1'
  - regex: '; *(Kurio.*?) Build/'
    device_replacement: '$1'
    brand_replacement: 'Kurio'
    model_replacement: '$1'
  - regex: '; *(K-Touch)[ _]([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'Ktouch'
    model_replacement: '$2'
  - regex: '; *((?:EV|KM)-S\d+[A-Z]?) Build'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'KTtech'
    model_replacement: '$1'
  - regex: '; *(Zio|Hydro|Torque|Event|EVENT|Echo|Milano|Rise|URBANO PROGRESSO|WX04K|WX06K|WX10K|KYL21|[12]0[12]K|302KC|C5[12]\d{2}|E6782) Build/'
    device_replacement: '$1'
    brand_replacement: 'Kyocera'
    model_replacement: '$1'
  - regex: '; *(L\d{3}[A-Z]?) *(?:;|\)|Build)'
    device_replacement: '$1'
    brand_replacement: 'Landvo'
    model_replacement: '$1'
  - regex: '; *(?:LAVA[ _])?IRIS[ _\-]?([^/;\)]+) *(?:;|\)|Build)'
    regex_flag: 'i'
    device_replacement: 'Iris $1'
    brand_replacement: 'Lava'
    model_replacement: 'Iris $1'
  - regex: '; *LAVA[ _]([^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Lava'
    model_replacement: '$1'
  - regex: '; *(X604|504Q\+) Build'
    device_replacement: '$1'
    brand_replacement: 'Lava'
    model_replacement: '$1'
  - regex: '; *(Lead [^;/]+) Build'
    regex_flag: 'i'
    device_replacement: 'Leagoo $1'
    brand_replacement: 'Leagoo'
    model_replacement: '$1'
  - regex: '; *(?:(Aspire A1)|(?:LEMON|Lemon)[ _]([^;/]+))_? Build'
    device_replacement: 'Lemon $1$2'
    brand_replacement: 'Lemon'
    model_replacement: '$1$2'
  - regex: '; *(TAB-1012) Build/'
    device_replacement: 'Lenco $1'
    brand_replacement: 'Lenco'
    model_replacement: '$1'
  - regex: '; Lenco ([^;/]+) Build/'
    device_replacement: 'Lenco $1'
    brand_replacement: 'Lenco'
    model_replacement: '$1'
  - regex: '; *(A1_07|A2107A-H|S2005A-H|S1-37AH0) Build'
    device_replacement: '$1'
    brand_replacement: 'Lenovo'
    model_replacement: '$1'
  - regex: '; *(Idea(?:Tab|[Pp]ad)|YOGA)[ _]?([^;/]+)[;]? Build'
    device_replacement: 'Lenovo $1 $2'
    brand_replacement: 'Lenovo'
    model_replacement: '$1 $2'
  - regex: '; *(ThinkPad) ?(Tablet) Build/'
    device_replacement: 'Lenovo $1 $2'
    brand_replacement: 'Lenovo'
    model_replacement: '$1 $2'
  - regex: '; *(?:LNV-)?(?:=?[Ll]enovo[ _\-]?|LENOVO[ _])+(.+?)(?:Build|[;/\)])'
    device_replacement: 'Lenovo $1'
    brand_replacement: 'Lenovo'
    model_replacement: '$1'
  - regex: '[;,] (?:Vodafone )?(SmartTab) ?(II) ?(\d+) Build/'
    device_replacement: 'Lenovo $1 $2 $3'
    brand_replacement: 'Lenovo'
    model_replacement: '$1 $2 $3'
  - regex: '; *(3GC101|3GW10[01]|A390|A3000|A680|A850|A880) Build/'
    device_replacement: '$1'
    brand_replacement: 'Lenovo'
    model_replacement: '$1'
  - regex: '\b(?:Lenovo|LENOVO)+[ _\-]?([^,;:/ ]+)'
    device_replacement: 'Lenovo $1'
    brand_replacement: 'Lenovo'
    model_replacement: '$1'
  - regex: '; *(MFC\d+)[A-Z]{2}([^;,/]*),? Build'
    device_replacement: '$1$2'
    brand_replacement: 'Lexibook'
    model_replacement: '$1$2'
  - regex: '; *(Ally|AS\d{3}(?: 4G)?|E[34][0-9]{2}|LS[6-8][0-9]{2}|VS[6-9][0-9]+[^;/]+|Nexus [45]|Nexus 5X|GT540f?|Optimus (?:2X|G|4X HD)|OptimusX4HD) *(?:Build|;)'
    device_replacement: '$1'
    brand_replacement: 'LG'
    model_replacement: '$1'
  - regex: '[;:] *(L-\d+[A-Z]|LGL\d+[A-Z]?)(?:/V\d+)? *(?:Build|[;\)])'
    device_replacement: '$1'
    brand_replacement: 'LG'
    model_replacement: '$1'
  - regex: '; *(LG-)([A-Z]{1,2}\d{2,}[^,;/\)\(]*?)(?:Build| V\d+|[,;/\)\(]|$)'
    device_replacement: '$1$2'
    brand_replacement: 'LG'
    model_replacement: '$2'
  - regex: '; *(LG[ \-]|LG)([^;/]+)[;/]? Build'
    device_replacement: '$1$2'
    brand_replacement: 'LG'
    model_replacement: '$2'
  - regex: '^(LG)-([^;/]+)/ Mozilla/.*; Android'
    device_replacement: '$1 $2'
    brand_replacement: 'LG'
    model_replacement: '$2'
  - regex: '; *((?:SMB|smb)[^;/]+) Build/'
    device_replacement: '$1'
    brand_replacement: 'Malata'
    model_replacement: '$1'
  - regex: '; *(?:Malata|MALATA) ([^;/]+) Build/'
    device_replacement: '$1'
    brand_replacement: 'Malata'
    model_replacement: '$1'
  - regex: '; *(MS[45][0-9]{3}|MID0[568][NS]?|MID[1-9]|MID[78]0[1-9]|MID970[1-9]|MID100[1-9]) Build/'
    device_replacement: '$1'
    brand_replacement: 'Manta'
    model_replacement: '$1'
  - regex: '; *(M1052|M806|M9000|M9100|M9701|MID100|MID120|MID125|MID130|MID135|MID140|MID701|MID710|MID713|MID727|MID728|MID731|MID732|MID733|MID735|MID736|MID737|MID760|MID800|MID810|MID820|MID830|MID833|MID835|MID860|MID900|MID930|MID933|MID960|MID980) Build/'
    device_replacement: '$1'
    brand_replacement: 'Match'
    model_replacement: '$1'
  - regex: '; *(GenxDroid7|MSD7.*|AX\d{1,2}(?:[A-Z][A-z]*)?|Tab 701|Tab 722) Build/'
    device_replacement: 'Maxx $1'
    brand_replacement: 'Maxx'
    model_replacement: '$1'
  - regex: '; *(M-PP[^;/]+|PhonePad ?\d{2,}[^;/]+) Build'
    device_replacement: 'Mediacom $1'
    brand_replacement: 'Mediacom'
    model_replacement: '$1'
  - regex: '; *(M-MP[^;/]+|SmartPad ?\d{2,}[^;/]+) Build'
    device_replacement: 'Mediacom $1'
    brand_replacement: 'Mediacom'
    model_replacement: '$1'
  - regex: '; *(?:MD_)?LIFETAB[ _]([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: 'Medion Lifetab $1'
    brand_replacement: 'Medion'
    model_replacement: 'Lifetab $1'
  - regex: '; *MEDION ([^;/]+) Build'
    device_replacement: 'Medion $1'
    brand_replacement: 'Medion'
    model_replacement: '$1'
  - regex: '; *(E4001|E4004) Build'
    device_replacement: 'Medion $1'
    brand_replacement: 'Medion'
    model_replacement: '$1'
  - regex: '; *(M030|M031|M035|M040|M065|m9) Build'
    device_replacement: 'Meizu $1'
    brand_replacement: 'Meizu'
    model_replacement: '$1'
  - regex: '; *(?:meizu_|MEIZU )(.+?) *(?:Build|[;\)])'
    device_replacement: 'Meizu $1'
    brand_replacement: 'Meizu'
    model_replacement: '$1'
  - regex: '\b(?:Micromax[ _\-]?)+(P[A-Za-z0-9]+)'
    regex_flag: 'i'
    device_replacement: 'Micromax $1'
    brand_replacement: 'Micromax'
    model_replacement: '$1'
  - regex: '\b(?:Micromax[ _\-]?)+([A-Za-z0-9]+)'
    regex_flag: 'i'
    device_replacement: 'Micromax $1'
    brand_replacement: 'Micromax'
    model_replacement: '$1'
  - regex: '; *(A[02-9]\d|A[12]\d{2}|A90S|A110Q|X505|A068) Build(?:(?!QMobile).)*$'
    regex_flag: 'i'
    device_replacement: 'Micromax $1'
    brand_replacement: 'Micromax'
    model_replacement: '$1'
  - regex: '; *(P\d{3}|P\d{3})(?:\(Funbook\))? Build'
    regex_flag: 'i'
    device_replacement: 'Micromax $1'
    brand_replacement: 'Micromax'
    model_replacement: '$1'
  - regex: '; *(MITO)[ _\-]?([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'Mito'
    model_replacement: '$2'
  - regex: '; *(Cynus)[ _](F5|T\d|.+?) *(?:Build|[;/\)])'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'Mobistel'
    model_replacement: '$1 $2'
  - regex: '; *(Ahiga|Auriga[^;]*|Pegasus) *(?:Build|[;/\)])'
    device_replacement: '$1'
    brand_replacement: 'Mobiwire'
    model_replacement: '$1'
  - regex: '; *(MODECOM )?(FreeTab) ?([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1$2 $3'
    brand_replacement: 'Modecom'
    model_replacement: '$2 $3'
  - regex: '; *(MODECOM )([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'Modecom'
    model_replacement: '$2'
  - regex: '; *(MZ\d{3}\+?|MZ\d{3} 4G|Xoom[^;/]*|XOOM[^;/]*|RAZR HD) Build'
    device_replacement: 'Motorola $1'
    brand_replacement: 'Motorola'
    model_replacement: '$1'
  - regex: '; *(Milestone )(XT[^;/]*) Build'
    device_replacement: 'Motorola $1$2'
    brand_replacement: 'Motorola'
    model_replacement: '$2'
  - regex: '; *(Motoroi ?x|Droid X|DROIDX) Build'
    regex_flag: 'i'
    device_replacement: 'Motorola $1'
    brand_replacement: 'Motorola'
    model_replacement: 'DROID X'
  - regex: '; *(Droid[^;/]*|DROID[^;/]*|Milestone[^;/]*|Photon|Triumph|Devour|Titanium) Build'
    device_replacement: 'Motorola $1'
    brand_replacement: 'Motorola'
    model_replacement: '$1'
  - regex: '; *(A555|A85[34][^;/]*|A95[356]|ME[58]\d{2}\+?|ME600|ME632|ME722|MB\d{3}\+?|MT680|MT710|MT870|MT887|MT917|WX435|WX453|WX44[25]|XT\d{3,4}[A-Z\+]*|CL[iI]Q|CL[iI]Q XT|Nexus 6) Build'
    device_replacement: 'Motorola $1'
    brand_replacement: 'Motorola'
    model_replacement: '$1'
  - regex: '; *(Motorola MOT-|Motorola[ _\-]|MOT\-?)([^;/]+) Build'
    device_replacement: 'Motorola $1$2'
    brand_replacement: 'Motorola'
    model_replacement: '$2'
  - regex: '; *(Moto[_ ]?|MOT\-)([^;/]+) Build'
    device_replacement: 'Motorola $1$2'
    brand_replacement: 'Motorola'
    model_replacement: '$2'
  - regex: '; *((?:MP[DQ]C|MPG\d{1,4}|MP\d{3,4}|MID(?:(?:10[234]|114|43|7[247]|8[24]|7)C|8[01]1))[^;/]*) Build'
    device_replacement: '$1'
    brand_replacement: 'Mpman'
    model_replacement: '$1'
  - regex: '; *(?:MSI[ _])?(Primo\d+|Enjoy[ _\-][^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'Msi'
    model_replacement: '$1'
  - regex: '; *Multilaser[ _]([^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Multilaser'
    model_replacement: '$1'
  - regex: '; *(My)[_]?(Pad)[ _]([^;/]+) Build'
    device_replacement: '$1$2 $3'
    brand_replacement: 'MyPhone'
    model_replacement: '$1$2 $3'
  - regex: '; *My\|?Phone[ _]([^;/]+)(?: *Build|;)'
    regex_flag: 'i'
    device_replacement: 'MyPhone $1'
    brand_replacement: 'MyPhone'
    model_replacement: '$1'
  - regex: '; *(?:(A\d+|A818i)[ _](Duo)|(A919i?)) Build'
    regex_flag: 'i'
    device_replacement: '$1 $2$3'
    brand_replacement: 'MyPhone'
    model_replacement: '$1 $2$3'
  - regex: '; *(my(?:Tab|TAB)[^;/]*) Build'
    device_replacement: '$1'
    brand_replacement: 'Mytab'
    model_replacement: '$1'
  - regex: '; *(?:MY ?SAGA|MySAGA)[ -]([^;/]+) Build'
    device_replacement: 'Mysaga $1'
    brand_replacement: 'Mysaga'
    model_replacement: '$1'
  - regex: '; *(NABI2?-)([^;/]+) Build/'
    device_replacement: '$1$2'
    brand_replacement: 'Nabi'
    model_replacement: '$2'
  - regex: '; *(N-\d+[CDE]|101N) Build/'
    device_replacement: '$1'
    brand_replacement: 'Nec'
    model_replacement: '$1'
  - regex: '; ?(NEC-)(.*) Build/'
    device_replacement: '$1$2'
    brand_replacement: 'Nec'
    model_replacement: '$2'
  - regex: '; *(LT-NA7) Build/'
    device_replacement: '$1'
    brand_replacement: 'Nec'
    model_replacement: 'Lifetouch Note'
  - regex: '; *(NXM\d+[A-z0-9_]*|Next\d[A-z0-9_ \-]*|NEXT\d[A-z0-9_ \-]*|Nextbook [A-z0-9_ ]*|DATAM803HC|M805)(?: Build|[\);])'
    device_replacement: '$1'
    brand_replacement: 'Nextbook'
    model_replacement: '$1'
  - regex: '; *neken ([^;/]*) Build/'
    device_replacement: 'Neken $1'
    brand_replacement: 'Neken'
  - regex: '; *Newman ?([^;/]*) Build/'
    regex_flag: 'i'
    device_replacement: 'Newman $1'
    brand_replacement: 'Newman'
    model_replacement: '$1'
  - regex: '; *(Dynamic_(?:Fun|Maxi|Milo)|Enspert_Miracle|Forward_(?:Art|Escape|Prime|Run|Young)|Stylo) Build/'
    device_replacement: 'NGM $1'
    brand_replacement: 'NGM'
    model_replacement: '$1'
  - regex: '; *NGM[ _](Dynamic Star|Miracle|P0laris|Wilco) Build/'
    device_replacement: 'NGM $1'
    brand_replacement: 'NGM'
    model_replacement: '$1'
  - regex: '; *(COOLPIX S800c) Build/'
    device_replacement: '$1'
    brand_replacement: 'Nikon'
  - regex: '; *(Nokia)([ _\-]*)([^;/]*) Build'
    regex_flag: 'i'
    device_replacement: '$1$2$3'
    brand_replacement: 'Nokia'
    model_replacement: '$3'
  - regex: '; *(Nook ?|Barnes & Noble Nook |BN )([^;/]+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Nook'
    model_replacement: '$2'
  - regex: '; *(NOOK )?(BN[TR]V\d+A?|LogicPD Zoom2) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Nook'
    model_replacement: '$2'
  - regex: '; Build/(Nook)'
    device_replacement: '$1'
    brand_replacement: 'Nook'
    model_replacement: 'Tablet'
  - regex: '; *(NYX)_([^;/_]+)(?:_([^;/_]+))? Build'
    device_replacement: '$1 $2 $3'
    brand_replacement: 'NYX'
    model_replacement: '$2 $3'
  - regex: '; *(OP110|OliPad[^;/]+) Build'
    device_replacement: 'Olivetti $1'
    brand_replacement: 'Olivetti'
    model_replacement: '$1'
  - regex: '; *OMEGA[ _\-](MID[^;/]+) Build'
    device_replacement: 'Omega $1'
    brand_replacement: 'Omega'
    model_replacement: '$1'
  - regex: '^(MID7500|MID\d+) Mozilla/5\.0 \(iPad;'
    device_replacement: 'Omega $1'
    brand_replacement: 'Omega'
    model_replacement: '$1'
  - regex: '; *(?:(?:One )?A0001|ONEPLUS One) Build'
    device_replacement: 'Oneplus One'
    brand_replacement: 'Oneplus'
    model_replacement: 'One'
  - regex: '; *((?:CIUS|cius)[^;/]*) Build'
    device_replacement: 'Openpeak $1'
    brand_replacement: 'Openpeak'
    model_replacement: '$1'
  - regex: '; *(Find ?(?:5|7a)|R8[012]\d{1,2}|T703\d{0,1}|U70\d{1,2}T?|X90\d{1,2}) Build'
    device_replacement: 'Oppo $1'
    brand_replacement: 'Oppo'
    model_replacement: '$1'
  - regex: '; *OPPO ?([^;/]+) Build/'
    device_replacement: 'Oppo $1'
    brand_replacement: 'Oppo'
    model_replacement: '$1'
  - regex: '; *(?:Odys\-|ODYS\-|ODYS )([^;/]+) Build'
    device_replacement: 'Odys $1'
    brand_replacement: 'Odys'
    model_replacement: '$1'
  - regex: '; *(SELECT) ?(7) Build'
    device_replacement: 'Odys $1 $2'
    brand_replacement: 'Odys'
    model_replacement: '$1 $2'
  - regex: '; *(PEDI)_(PLUS)_(W) Build'
    device_replacement: 'Odys $1 $2 $3'
    brand_replacement: 'Odys'
    model_replacement: '$1 $2 $3'
  - regex: '; *(AEON|ARIA|AVIATOR|BRAVIO|CONNECT7PRO|CONNECT8PLUS|EOS10|FUSION|FUSION2IN1|Genio|GATE|IEOS[^;/]*|IRON|INTELLITAB7|JUNIORTAB|Loox|LOOX|LOOX Plus|MIRON|Motion|NERON|NOON|NOON970|NOON_PRO|NEXT|OPOS|PEDI[^;/]*|PRIME[^;/]*|PRO_Q8|SKYPLUS3G|STUDYTAB|TABLO|Tablet-PC-4|UNO_X8|UNO_X10|VISIO|XELIO[^;/]*|Xelio ?\d+ ?[Pp]ro|XelioPT2Pro|XENO10|XPRESS PRO) Build'
    device_replacement: 'Odys $1'
    brand_replacement: 'Odys'
    model_replacement: '$1'
  - regex: '; (ONE [a-zA-Z]\d+) Build/'
    device_replacement: 'OnePlus $1'
    brand_replacement: 'OnePlus'
    model_replacement: '$1'
  - regex: '; (ONEPLUS [a-zA-Z]\d+) Build/'
    device_replacement: 'OnePlus $1'
    brand_replacement: 'OnePlus'
    model_replacement: '$1'
  - regex: '; *(TP-\d+) Build/'
    device_replacement: 'Orion $1'
    brand_replacement: 'Orion'
    model_replacement: '$1'
  - regex: '; *(G100W?) Build/'
    device_replacement: 'PackardBell $1'
    brand_replacement: 'PackardBell'
    model_replacement: '$1'
  - regex: '; *(Panasonic)[_ ]([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(FZ-A1B|JT-B1) Build'
    device_replacement: 'Panasonic $1'
    brand_replacement: 'Panasonic'
    model_replacement: '$1'
  - regex: '; *(dL1|DL1) Build'
    device_replacement: 'Panasonic $1'
    brand_replacement: 'Panasonic'
    model_replacement: '$1'
  - regex: '; *(SKY[ _])?(IM\-[AT]\d{3}[^;/]+).* Build/'
    device_replacement: 'Pantech $1$2'
    brand_replacement: 'Pantech'
    model_replacement: '$1$2'
  - regex: '; *((?:ADR8995|ADR910L|ADR930L|ADR930VW|PTL21|P8000)(?: 4G)?) Build/'
    device_replacement: '$1'
    brand_replacement: 'Pantech'
    model_replacement: '$1'
  - regex: '; *Pantech([^;/]+).* Build/'
    device_replacement: 'Pantech $1'
    brand_replacement: 'Pantech'
    model_replacement: '$1'
  - regex: '; *(papyre)[ _\-]([^;/]+) Build/'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'Papyre'
    model_replacement: '$2'
  - regex: '; *(?:Touchlet )?(X10\.[^;/]+) Build/'
    device_replacement: 'Pearl $1'
    brand_replacement: 'Pearl'
    model_replacement: '$1'
  - regex: '; PHICOMM (i800) Build/'
    device_replacement: 'Phicomm $1'
    brand_replacement: 'Phicomm'
    model_replacement: '$1'
  - regex: '; PHICOMM ([^;/]+) Build/'
    device_replacement: 'Phicomm $1'
    brand_replacement: 'Phicomm'
    model_replacement: '$1'
  - regex: '; *(FWS\d{3}[^;/]+|i600|i813w) Build/'
    device_replacement: 'Phicomm $1'
    brand_replacement: 'Phicomm'
    model_replacement: '$1'
  - regex: '; *(D633|D822|D833|T539|T939|V726|W335|W336|W337|W3568|W536|W5510|W626|W632|W6350|W6360|W6500|W732|W736|W737|W7376|W820|W832|W8355|W8500|W8510|W930) Build'
    device_replacement: '$1'
    brand_replacement: 'Philips'
    model_replacement: '$1'
  - regex: '; *(?:Philips|PHILIPS)[ _]([^;/]+) Build'
    device_replacement: 'Philips $1'
    brand_replacement: 'Philips'
    model_replacement: '$1'
  - regex: 'Android 4\..*; *(M[12356789]|U[12368]|S[123])\ ?(pro)? Build'
    device_replacement: 'Pipo $1$2'
    brand_replacement: 'Pipo'
    model_replacement: '$1$2'
  - regex: '; *(MOMO[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Ployer'
    model_replacement: '$1'
  - regex: '; *(?:Polaroid[ _])?((?:MIDC\d{3,}|PMID\d{2,}|PTAB\d{3,})[^;/]*)(\/[^;/]*)? Build/'
    device_replacement: '$1'
    brand_replacement: 'Polaroid'
    model_replacement: '$1'
  - regex: '; *(?:Polaroid )(Tablet) Build/'
    device_replacement: '$1'
    brand_replacement: 'Polaroid'
    model_replacement: '$1'
  - regex: '; *(POMP)[ _\-](.+?) *(?:Build|[;/\)])'
    device_replacement: '$1 $2'
    brand_replacement: 'Pomp'
    model_replacement: '$2'
  - regex: '; *(TB07STA|TB10STA|TB07FTA|TB10FTA) Build/'
    device_replacement: '$1'
    brand_replacement: 'Positivo'
    model_replacement: '$1'
  - regex: '; *(?:Positivo )?((?:YPY|Ypy)[^;/]+) Build/'
    device_replacement: '$1'
    brand_replacement: 'Positivo'
    model_replacement: '$1'
  - regex: '; *(MOB-[^;/]+) Build/'
    device_replacement: '$1'
    brand_replacement: 'POV'
    model_replacement: '$1'
  - regex: '; *POV[ _\-]([^;/]+) Build/'
    device_replacement: 'POV $1'
    brand_replacement: 'POV'
    model_replacement: '$1'
  - regex: '; *((?:TAB-PLAYTAB|TAB-PROTAB|PROTAB|PlayTabPro|Mobii[ _\-]|TAB-P)[^;/]*) Build/'
    device_replacement: 'POV $1'
    brand_replacement: 'POV'
    model_replacement: '$1'
  - regex: '; *(?:Prestigio )?((?:PAP|PSP|PMP|PMT)\d[^;/]+) Build/'
    device_replacement: 'Prestigio $1'
    brand_replacement: 'Prestigio'
    model_replacement: '$1'
  - regex: '; *(PLT[0-9]{4}.*) Build/'
    device_replacement: '$1'
    brand_replacement: 'Proscan'
    model_replacement: '$1'
  - regex: '; *(A2|A5|A8i?|A900i?|A950)_?(Classic)? Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Qmobile'
    model_replacement: '$1 $2'
  - regex: '; *(A\d+) Build.*QMobile'
    device_replacement: '$1'
    brand_replacement: 'Qmobile'
    model_replacement: '$1 $2'
  - regex: '; *(Q[Mm]obile)_([^_]+)_([^_;/\)]+)(?: Build|\)|;)'
    device_replacement: 'Qmobile $2 $3'
    brand_replacement: 'Qmobile'
    model_replacement: '$2 $3'
  - regex: '; *(Q[Mm]obile)[_ ]([^;/\)]+)(?: Build|\)|;)'
    device_replacement: 'Qmobile $2'
    brand_replacement: 'Qmobile'
    model_replacement: '$2'
  - regex: '; *(Q\-Smart)[ _]([^;/]+) Build/'
    device_replacement: '$1 $2'
    brand_replacement: 'Qmobilevn'
    model_replacement: '$2'
  - regex: '; *(Q\-?[Mm]obile)[ _\-](S[^;/]+) Build/'
    device_replacement: '$1 $2'
    brand_replacement: 'Qmobilevn'
    model_replacement: '$2'
  - regex: '; *(TA1013) Build'
    device_replacement: '$1'
    brand_replacement: 'Quanta'
    model_replacement: '$1'
  - regex: '; *Ramos ?([^;/]+) Build/'
    device_replacement: 'Ramos $1'
    brand_replacement: 'Ramos'
    model_replacement: '$1'
  - regex: '; (RCT\w+) Build/'
    device_replacement: '$1'
    brand_replacement: 'RCA'
    model_replacement: '$1'
  - regex: '; *(RK\d+),? Build/'
    device_replacement: '$1'
    brand_replacement: 'Rockchip'
    model_replacement: '$1'
  - regex: ' Build/(RK\d+)'
    device_replacement: '$1'
    brand_replacement: 'Rockchip'
    model_replacement: '$1'
  - regex: '; *Runbo([^;/]+) Build/'
    device_replacement: 'Runbo $1'
    brand_replacement: 'Runbo'
    model_replacement: '$1'
  - regex: '; *(SH\-?\d\d[^;/]+|SBM\d[^;/]+|SH[LTV]\d{2}|[34]0\dSH) Build'
    device_replacement: 'Sharp $1'
    brand_replacement: 'Sharp'
    model_replacement: '$1'
  - regex: '; *(SHARP[ -])([^;/]+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'Sharp'
    model_replacement: '$2'
  - regex: '; *(SPX[_\-]\d[^;/]*) Build/'
    device_replacement: '$1'
    brand_replacement: 'Simvalley'
    model_replacement: '$1'
  - regex: '; *(SX7\-PEARL\.GmbH) Build/'
    device_replacement: '$1'
    brand_replacement: 'Simvalley'
    model_replacement: '$1'
  - regex: '; *(SP[T]?\-\d{2}[^;/]*) Build/'
    device_replacement: '$1'
    brand_replacement: 'Simvalley'
    model_replacement: '$1'
  - regex: '; *(SK\-.*) Build/'
    device_replacement: '$1'
    brand_replacement: 'SKtelesys'
    model_replacement: '$1'
  - regex: '; *(?:SKYTEX|SX)-([^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Skytex'
    model_replacement: '$1'
  - regex: '; *(IMAGINE [^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Skytex'
    model_replacement: '$1'
  - regex: '; *(SmartQ) ?([^;/]+) Build/'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(WF7C|WF10C|SBT[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Smartbitt'
    model_replacement: '$1'
  - regex: '; *(SBM(?:003SH|005SH|006SH|007SH|102SH)) Build'
    device_replacement: '$1'
    brand_replacement: 'Sharp'
    model_replacement: '$1'
  - regex: '; *(003P|101P|101P11C|102P) Build'
    device_replacement: '$1'
    brand_replacement: 'Panasonic'
    model_replacement: '$1'
  - regex: '; *(00\dZ) Build/'
    device_replacement: '$1'
    brand_replacement: 'ZTE'
    model_replacement: '$1'
  - regex: '; HTC(X06HT) Build'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: '; *(001HT|X06HT) Build'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: '; *(201M) Build'
    device_replacement: '$1'
    brand_replacement: 'Motorola'
    model_replacement: 'XT902'
  - regex: '; *([123]0\dF) Build'
    device_replacement: '$1'
    brand_replacement: 'Fujitsu'
    model_replacement: '$1'
  - regex: '; *(ST\d{4}.*)Build/ST'
    device_replacement: 'Trekstor $1'
    brand_replacement: 'Trekstor'
    model_replacement: '$1'
  - regex: '; *(?:TrekStor )?(ST\d{4}.*|VT10416-\d|SurfTab ST\d{4}.*|SurfTab (?:breeze|xiron) [^;]*|breeze [^;]*|Xintroni[^;]+) Build/'
    device_replacement: 'Trekstor $1'
    brand_replacement: 'Trekstor'
    model_replacement: '$1'
  - regex: '; *Smartbook[^ ]? ([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: 'Smartbook $1'
    brand_replacement: 'Smartbook'
    model_replacement: '$1'
  - regex: '; *(Sony ?Ericsson ?)([^;/]+) Build'
    device_replacement: '$1$2'
    brand_replacement: 'SonyEricsson'
    model_replacement: '$2'
  - regex: '; *((?:SK|ST|LT|MK|MT|WT)\d{2}[a-z0-9]*(?:-o)?|E\d{2,3}[a-z]?|R800[ai]|U20i|X(?:10|15)(?:[a-z]?|mini|minipro)) Build'
    device_replacement: '$1'
    brand_replacement: 'SonyEricsson'
    model_replacement: '$1'
  - regex: '; *(Xperia (?:A8|Arc|Acro|Active|Live with Walkman|Mini|Neo|Play|Pro|Ray|X\d+)[^;/]*) Build'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'SonyEricsson'
    model_replacement: '$1'
  - regex: '; Sony (Tablet[^;/]+) Build'
    device_replacement: 'Sony $1'
    brand_replacement: 'Sony'
    model_replacement: '$1'
  - regex: '; Sony ([^;/]+) Build'
    device_replacement: 'Sony $1'
    brand_replacement: 'Sony'
    model_replacement: '$1'
  - regex: '; *(Sony)([A-Za-z0-9\-]+) Build'
    device_replacement: '$1$2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(Xperia [^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Sony'
    model_replacement: '$1'
  - regex: '; *(C(?:1[5-9]|2[1-9]|53|55|6[0-9])[0-9]{2}|C200[1-9]|D[25]\d{3}|D6[567]\d{2}|E200[1-9]|E2[^0]\d{2}|E20[345]3|E5[356]\d{2}|E5823|E6[568]\d{2});? Build'
    device_replacement: '$1'
    brand_replacement: 'Sony'
    model_replacement: '$1'
  - regex: '; *(SGP\d{3}|SGPT\d{2}|S39h) Build'
    device_replacement: '$1'
    brand_replacement: 'Sony'
    model_replacement: '$1'
  - regex: '; *(NW-Z1000Series) Build'
    device_replacement: '$1'
    brand_replacement: 'Sony'
    model_replacement: '$1'
  - regex: '; *((?:CSL_Spice|Spice|SPICE|CSL)[ _\-]?)?([Mm][Ii])([ _\-])?(\d{3}[^;/]*) Build/'
    device_replacement: '$1$2$3$4'
    brand_replacement: 'Spice'
    model_replacement: 'Mi$4'
  - regex: 'Sprint (ATP.*) Build'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: 'Sprint (APA.*) Build'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: '; *(Sprint )(.+?) *(?:Build|[;/])'
    device_replacement: '$1$2'
    brand_replacement: 'Sprint'
    model_replacement: '$2'
  - regex: '; *(DRAGON S5000D|JAZZ S47D|S40D MAGIC|S50D SKY|S57D SAMBA|S4500D ROCK) Build/'
    device_replacement: '$1'
    brand_replacement: 'Switel'
    model_replacement: '$1'
  - regex: '; *(Symphony)[ _](.+?)(?: Build|[;\)/])'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *([^;/]+) Build/(Symphony)'
    device_replacement: '$2 $1'
    brand_replacement: '$2'
    model_replacement: '$1'
  - regex: '; *(TAGI[ ]?)(MID) ?([^;/]+) Build/'
    device_replacement: '$1$2$3'
    brand_replacement: 'Tagi'
    model_replacement: '$2$3'
  - regex: '; *(Oyster500|Opal 800) Build'
    device_replacement: 'Tecmobile $1'
    brand_replacement: 'Tecmobile'
    model_replacement: '$1'
  - regex: '; *(TECNO[ _])([^;/]+) Build/'
    device_replacement: '$1$2'
    brand_replacement: 'Tecno'
    model_replacement: '$2'
  - regex: '; *Android for (Telechips|Techvision) ([^ ]+) '
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(T-Hub2) Build/'
    device_replacement: '$1'
    brand_replacement: 'Telstra'
    model_replacement: '$1'
  - regex: '; *(PAD) ?(100[12]) Build/'
    device_replacement: 'Terra $1$2'
    brand_replacement: 'Terra'
    model_replacement: '$1$2'
  - regex: '; *(T[BM]-\d{3}[^;/]+) Build/'
    device_replacement: '$1'
    brand_replacement: 'Texet'
    model_replacement: '$1'
  - regex: '; *(TiPhone)[ \-]([^;/]+) Build/'
    device_replacement: '$1 $2'
    brand_replacement: 'TiPhone'
    model_replacement: '$2'
  - regex: '; *(tolino [^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Thalia'
    model_replacement: '$1'
  - regex: '; *Build/.* (TOLINO_BROWSER)'
    device_replacement: '$1'
    brand_replacement: 'Thalia'
    model_replacement: 'Tolino Shine'
  - regex: '; *(?:CJ[ -])?(ThL|THL|thl)[ _\-]{1,2}([^;/]+) Build/'
    device_replacement: '$1 $2'
    brand_replacement: 'Thl'
    model_replacement: '$2'
  - regex: '; *(T100|T200C?|T5|W100|W200|W8s) Build/'
    device_replacement: '$1'
    brand_replacement: 'Thl'
    model_replacement: '$1'
  - regex: '; *(T-Mobile[ _]G2[ _]Touch) Build'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: 'Hero'
  - regex: '; *(T-Mobile[ _]G2) Build'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: 'Desire Z'
  - regex: '; *(T-Mobile myTouch Q) Build'
    device_replacement: '$1'
    brand_replacement: 'Huawei'
    model_replacement: 'U8730'
  - regex: '; *(T-Mobile myTouch) Build'
    device_replacement: '$1'
    brand_replacement: 'Huawei'
    model_replacement: 'U8680'
  - regex: '; *(T-Mobile_Espresso) Build'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: 'Espresso'
  - regex: '; *(T-Mobile G1) Build'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: 'Dream'
  - regex: '\b(T-Mobile ?)?(myTouch)[ _]?([34]G)[ _]?([^\/]*) (?:Mozilla|Build)'
    device_replacement: '$1$2 $3 $4'
    brand_replacement: 'HTC'
    model_replacement: '$2 $3 $4'
  - regex: '\b(T-Mobile)_([^_]+)_(.*) Build'
    device_replacement: '$1 $2 $3'
    brand_replacement: 'Tmobile'
    model_replacement: '$2 $3'
  - regex: '\b(T-Mobile)[_ ]?(.*?)Build'
    device_replacement: '$1 $2'
    brand_replacement: 'Tmobile'
    model_replacement: '$2'
  - regex: ' (ATP[0-9]{4}) Build'
    device_replacement: '$1'
    brand_replacement: 'Tomtec'
    model_replacement: '$1'
  - regex: ' *(TOOKY)[ _\-]([^;/]+) ?(?:Build|;)'
    regex_flag: 'i'
    device_replacement: '$1 $2'
    brand_replacement: 'Tooky'
    model_replacement: '$2'
  - regex: '\b(TOSHIBA_AC_AND_AZ|TOSHIBA_FOLIO_AND_A|FOLIO_AND_A)'
    device_replacement: '$1'
    brand_replacement: 'Toshiba'
    model_replacement: 'Folio 100'
  - regex: '; *([Ff]olio ?100) Build/'
    device_replacement: '$1'
    brand_replacement: 'Toshiba'
    model_replacement: 'Folio 100'
  - regex: '; *(AT[0-9]{2,3}(?:\-A|LE\-A|PE\-A|SE|a)?|AT7-[ABC]|AT1S0|Hikari-iFrame/WDPF-[^;/]+|THRiVE|Thrive) Build/'
    device_replacement: 'Toshiba $1'
    brand_replacement: 'Toshiba'
    model_replacement: '$1'
  - regex: '; *(TM-MID\d+[^;/]+|TOUCHMATE|MID-750) Build'
    device_replacement: '$1'
    brand_replacement: 'Touchmate'
    model_replacement: '$1'
  - regex: '; *(TM-SM\d+[^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'Touchmate'
    model_replacement: '$1'
  - regex: '; *(A10 [Bb]asic2?) Build/'
    device_replacement: '$1'
    brand_replacement: 'Treq'
    model_replacement: '$1'
  - regex: '; *(TREQ[ _\-])([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: '$1$2'
    brand_replacement: 'Treq'
    model_replacement: '$2'
  - regex: '; *(Amazing [^;/]+) Build'
    device_replacement: '$1'
    brand_replacement: 'TWM'
    model_replacement: '$1'
  - regex: '; *(X-?5|X-?3) Build/'
    device_replacement: '$1'
    brand_replacement: 'Umeox'
    model_replacement: '$1'
  - regex: '; *(A502\+?|A936|A603|X1|X2) Build/'
    device_replacement: '$1'
    brand_replacement: 'Umeox'
    model_replacement: '$1'
  - regex: '; (UMI)[ _](.+?) Build/'
    device_replacement: '$1 $2'
    brand_replacement: 'Umi'
    model_replacement: '$2'
  - regex: '(?:CnM)[ \-](.+?) Build/'
    regex_flag: 'i'
    device_replacement: 'CnM $1'
    brand_replacement: 'CnM'
    model_replacement: '$1'
  - regex: '(?:VS|Versus)[ \-](.+?) Build/'
    regex_flag: 'i'
    device_replacement: 'Versus $1'
    brand_replacement: 'Versus'
    model_replacement: '$1'
  - regex: '(VERTU) ([^;/]+) Build/'
    device_replacement: '$1 $2'
    brand_replacement: 'Vertu'
    model_replacement: '$2'
  - regex: '; *(Videocon)[ _\-]([^;/]+) *(?:Build|;)'
    device_replacement: '$1 $2'
    brand_replacement: 'Videocon'
    model_replacement: '$2'
  - regex: ' (VT\d{2}[A-Za-z]*|A55q?HD) Build'
    device_replacement: '$1'
    brand_replacement: 'Videocon'
    model_replacement: '$1'
  - regex: '; *((?:ViewPad|ViewPhone|VSD)[^;/]+) Build/'
    device_replacement: '$1'
    brand_replacement: 'Viewsonic'
    model_replacement: '$1'
  - regex: '; *(ViewSonic-)([^;/]+) Build/'
    device_replacement: '$1$2'
    brand_replacement: 'Viewsonic'
    model_replacement: '$2'
  - regex: '; *(GTablet.*) Build/'
    device_replacement: '$1'
    brand_replacement: 'Viewsonic'
    model_replacement: '$1'
  - regex: '; *([Vv]ivo)[ _]([^;/]+) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'vivo'
    model_replacement: '$2'
  - regex: '(Vodafone) (.*) Build/'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; ((?:JAX|Xylo|Oxxo|Ego|Gyga)[ _](?:QS|S|Mini)).* Build'
    device_replacement: '$1'
    brand_replacement: 'Vonino'
    model_replacement: '$1'
  - regex: '; (Argus[ _](QS|S)|Epic[ _]E7|Emerald[ _]78E|Diamond[ _]79HD|JetStar(?:[ _][^;/]+)?|Luna[ _]70C|Magnet_M9|(?:Onyx|Orin|Otis)[ _](?:QS|XS|S|Z|HD)|Primus (?:94HD.*|QS)|Sirius_(?:QS|Evo_QS)|SpeedStar S Pro|Spirit (QS|S)|Vario.*) Build'
    device_replacement: '$1'
    brand_replacement: 'Vonino'
    model_replacement: '$1'
  - regex: '; *(?:Walton[ _\-])?(Primo[ _\-][^;/]+) Build'
    regex_flag: 'i'
    device_replacement: 'Walton $1'
    brand_replacement: 'Walton'
    model_replacement: '$1'
  - regex: '; *(?:WIKO[ \-])?(CINK\+?|CINK [^;/]+|BARRY|BIRDY|BLOOM|DARKFULL|DARKMOON|DARKNIGHT|DARKSIDE|FIZZ|GETAWAY|GOA|HIGHWAY(?: PURE| SIGNS| STAR)?|IGGY|JIMMY|KITE|LENNY(?:2)?|OZZY|RAINBOW(?: JAM| LITE| UP)?|RIDGE(?: FAB)?|SLIDE|STAIRWAY|SUBLIM|SUNSET(?:2)?|WAX)( 4G)? Build/'
    regex_flag: 'i'
    device_replacement: 'Wiko $1$2'
    brand_replacement: 'Wiko'
    model_replacement: '$1$2'
  - regex: '; *WellcoM-([^;/]+) Build'
    device_replacement: 'Wellcom $1'
    brand_replacement: 'Wellcom'
    model_replacement: '$1'
  - regex: '; ([Ww]e[Tt]ab[^;/]*?) *Build'
    device_replacement: '$1'
    brand_replacement: 'WeTab'
    model_replacement: '$1'
  - regex: '; *(AT-AS[^;/]+) Build'
    device_replacement: 'Wolfgang $1'
    brand_replacement: 'Wolfgang'
    model_replacement: '$1'
  - regex: '; *(?:Woxter|Wxt) ([^;/]+) Build'
    device_replacement: 'Woxter $1'
    brand_replacement: 'Woxter'
    model_replacement: '$1'
  - regex: '; *(?:Xenta |Luna )?(TAB[234][0-9]{2}|TAB0[78]-\d{3}|TAB0?9-\d{3}|TAB1[03]-\d{3}|SMP\d{2}-\d{3}) Build/'
    device_replacement: 'Yarvik $1'
    brand_replacement: 'Yarvik'
    model_replacement: '$1'
  - regex: '; *([A-Z]{2,4})(M\d{3,}[A-Z]{2})([^;\)\/]*)(?: Build|[;\)])'
    device_replacement: 'Yifang $1$2$3'
    brand_replacement: 'Yifang'
    model_replacement: '$2'
  - regex: '; *((?:MI|MI2|Mi|HM|MI-ONE|MiPad|Redmi)[ _][^;/]+) (?:Build|MIUI)/'
    device_replacement: 'XiaoMi $1'
    brand_replacement: 'XiaoMi'
    model_replacement: '$1'
  - regex: '; *XOLO[ _]([^;/]*tab.*) Build'
    regex_flag: 'i'
    device_replacement: 'Xolo $1'
    brand_replacement: 'Xolo'
    model_replacement: '$1'
  - regex: '; *XOLO[ _]([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: 'Xolo $1'
    brand_replacement: 'Xolo'
    model_replacement: '$1'
  - regex: '; *(q\d0{2,3}[a-z]?|8x-1000|A(?:500|550|1000)s(?:[ _]Lite|[ _]IPS)?|A500 Club|A500L|A600) Build'
    regex_flag: 'i'
    device_replacement: 'Xolo $1'
    brand_replacement: 'Xolo'
    model_replacement: '$1'
  - regex: '; *(PAD ?[79]\d+[^;/]*|TelePAD\d+[^;/]) Build'
    device_replacement: 'Xoro $1'
    brand_replacement: 'Xoro'
    model_replacement: '$1'
  - regex: '; *(?:XORO|Xoro) (PAD ?\d+[^;/]*|KIDS\d+|TelePAD\d+[^;/]) Build'
    device_replacement: 'Xoro $1'
    brand_replacement: 'Xoro'
    model_replacement: '$1'
  - regex: '; *(?:Xtouch[ _]([^;/]+)|(X401|X403|X405|X406|X506[s]?|X507[QSsT]?|X508|X509|X601)) Build'
    device_replacement: 'Xtouch $1$2'
    brand_replacement: 'Xtouch'
    model_replacement: '$1$2'
  - regex: '\b(Andy|yezz(?:[ -]andy)?)[ _-]([^;/]+) Build'
    regex_flag: 'i'
    device_replacement: 'Yezz Andy $2'
    brand_replacement: 'Yezz'
    model_replacement: 'Andy $2'
  - regex: '; *(?:(?:ZOPO|Zopo)[ _]([^;/]+)|(ZP ?(?:\d{2}[^;/]+|C2))|(C[2379])) Build'
    device_replacement: '$1$2$3'
    brand_replacement: 'Zopo'
    model_replacement: '$1$2$3'
  - regex: '; *(ZiiLABS) (Zii[^;/]*) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'ZiiLabs'
    model_replacement: '$2'
  - regex: '; *(Zii)_([^;/]*) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'ZiiLabs'
    model_replacement: '$2'
  - regex: '; *(ARIZONA|(?:ATLAS|Atlas) W|D930|Grand (?:[SX][^;]*|Era|Memo[^;]*)|JOE|(?:Kis|KIS)\b[^;]*|Libra|Light [^;]*|N8[056][01]|N850L|N8000|N9[15]\d{2}|N9810|NX501|Optik|(?:Vip )Racer[^;]*|RacerII|RACERII|San Francisco[^;]*|V9[AC]|V55|V881|Z[679][0-9]{2}[A-z]?|ZTE_BLADE_III) Build'
    device_replacement: '$1'
    brand_replacement: 'ZTE'
    model_replacement: '$1'
  - regex: '; *([A-Z]\d+)_USA_[^;]* Build'
    device_replacement: '$1'
    brand_replacement: 'ZTE'
    model_replacement: '$1'
  - regex: '; *(SmartTab\d+)[^;]* Build'
    device_replacement: '$1'
    brand_replacement: 'ZTE'
    model_replacement: '$1'
  - regex: '; *(?:Blade|BLADE|ZTE-BLADE)([^;/]*) Build'
    device_replacement: 'ZTE Blade$1'
    brand_replacement: 'ZTE'
    model_replacement: 'Blade$1'
  - regex: '; *(?:Skate|SKATE|ZTE-SKATE)([^;/]*) Build'
    device_replacement: 'ZTE Skate$1'
    brand_replacement: 'ZTE'
    model_replacement: 'Skate$1'
  - regex: '; *(Orange |Optimus )(Monte Carlo|San Francisco) Build'
    device_replacement: '$1$2'
    brand_replacement: 'ZTE'
    model_replacement: '$1$2'
  - regex: '; *(?:ZXY-ZTE_|ZTE\-U |ZTE[\- ]|ZTE-C[_ ])([^;/]+) Build'
    device_replacement: 'ZTE $1'
    brand_replacement: 'ZTE'
    model_replacement: '$1'
  - regex: '; (BASE) (lutea|Lutea 2|Tab[^;]*) Build'
    device_replacement: '$1 $2'
    brand_replacement: 'ZTE'
    model_replacement: '$1 $2'
  - regex: '; (Avea inTouch \d[^;/]*|soft stone|tmn smart a7|Movistar[ _]Link|KPN Smart 300|Orange Reyo|meo smart a12|MEO Smart A75|DIGICEL DL800|tmn smart a18|Turkcell Maxi Plus 5|TURKCELL T50|RACER III mini) Build'
    regex_flag: 'i'
    device_replacement: '$1'
    brand_replacement: 'ZTE'
    model_replacement: '$1'
  - regex: '; *(vp9plus)\)'
    device_replacement: '$1'
    brand_replacement: 'ZTE'
    model_replacement: '$1'
  - regex: '; ?(Cloud[ _]Z5|z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900) Build/'
    device_replacement: '$1'
    brand_replacement: 'Zync'
    model_replacement: '$1'
  - regex: '; ?(Kindle Fire) Build\b'
    device_replacement: 'Kindle Fire'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire'
  - regex: '; ?(KFOT|KFOTE|Amazon Kindle Fire2) Build\b'
    device_replacement: 'Kindle Fire 2'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire 2'
  - regex: '; ?(KFTT|Kindle Fire HD 7) Build\b'
    device_replacement: 'Kindle Fire HD'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire HD 7"'
  - regex: '; ?(KFSAWA) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Fire HDX 8.9 (4th Gen) Wan'
    device_replacement: 'Fire HDX 8.9 (4th Gen) Wan'
  - regex: '; ?(KFSAWI) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Fire HDX 8.9 (4th Gen)'
    device_replacement: 'Fire HDX 8.9 (4th Gen)'
  - regex: '; ?(KFASWI) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Fire HD 7 (4th Gen)'
    device_replacement: 'Fire HD 7 (4th Gen)'
  - regex: '; ?(KFARWI) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Fire HD 6 (4th Gen)'
    device_replacement: 'Fire HD 6 (4th Gen)'
  - regex: '; ?(KFTHWA) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire HDX 7" (3rd Gen) Wan'
    device_replacement: 'Kindle Fire HDX 7" (3rd Gen) Wan'
  - regex: '; ?(KFTHWI) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire HDX 7" (3rd Gen)'
    device_replacement: 'Kindle Fire HDX 7" (3rd Gen)'
  - regex: '; ?(KFAPWA) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire HDX 8.9" (3rd Gen) Wan'
    device_replacement: 'Kindle Fire HDX 8.9" (3rd Gen) Wan'
  - regex: '; ?(KFAPWI) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire HDX 8.9" (3rd Gen)'
    device_replacement: 'Kindle Fire HDX 8.9" (3rd Gen)'
  - regex: '; ?(KFSOWI) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire HD 7" (3rd Gen)'
    device_replacement: 'Kindle Fire HD 7" (3rd Gen)'
  - regex: '; ?(KFTHWI) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire HDX 7"'
    device_replacement: 'Kindle Fire HDX 7"'
  - regex: '; ?(KFTHWA) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire HDX 7" Wan'
    device_replacement: 'Kindle Fire HDX 7" Wan'
  - regex: '; ?(KFJWA) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire HD 8.9" (2nd Gen) Wan'
    device_replacement: 'Kindle Fire HD 8.9" (2nd Gen) Wan'
  - regex: '; ?(KFJWI) Build\b'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire HD 8.9" (2nd Gen)'
    device_replacement: 'Kindle Fire HD 8.9" (2nd Gen)'
  - regex: '; ?(SD4930UR) Build\b'
    device_replacement: 'Fire Phone'
    brand_replacement: 'Amazon'
    model_replacement: 'Fire Phone'
  - regex: '; ?Amazon ([^;/]+) Build\b'
    device_replacement: '$1'
    brand_replacement: 'Amazon'
    model_replacement: '$1'
  - regex: '; ?(Kindle) Build\b'
    device_replacement: 'Kindle'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle'
  - regex: '; ?(Silk)/(\d+)\.(\d+)(?:\.([0-9\-]+))? Build\b'
    device_replacement: 'Kindle Fire'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle Fire$2'
  - regex: ' (Kindle)/(\d+\.\d+)'
    device_replacement: 'Kindle'
    brand_replacement: 'Amazon'
    model_replacement: '$1 $2'
  - regex: ' (Silk|Kindle)/(\d+)\.'
    device_replacement: 'Kindle'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle'
  - regex: '; (AFTB|AFTM) Build'
    device_replacement: '$1'
    brand_replacement: 'Amazon'
    model_replacement: '$1'
  - regex: '(sprd)\-([^/]+)/'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(H\d{2}00\+?) Build'
    device_replacement: '$1'
    brand_replacement: 'Hero'
    model_replacement: '$1'
  - regex: '; *(iphone|iPhone5) Build/'
    device_replacement: 'Xianghe $1'
    brand_replacement: 'Xianghe'
    model_replacement: '$1'
  - regex: '; *([^;/]+(?:v\d{2}_[a-z]{2,4}|_jbla?))[^;/]+ Build/'
    device_replacement: 'Xianghe $1'
    brand_replacement: 'Xianghe'
    model_replacement: '$1'
  - regex: '\bUSCCHTC[_\-]?([^ ;/\)]+)'
    device_replacement: '$1'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: '\bUSCC[_\-]?([^ ;/\)]+)'
    device_replacement: '$1'
    brand_replacement: 'Cellular'
    model_replacement: '$1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:ALCATEL)[^;]*; *([^;,\)]+)'
    device_replacement: 'Alcatel $1'
    brand_replacement: 'Alcatel'
    model_replacement: '$1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:ASUS|Asus)[^;]*; *([^;,\)]+)'
    device_replacement: 'Asus $1'
    brand_replacement: 'Asus'
    model_replacement: '$1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:DELL|Dell)[^;]*; *([^;,\)]+)'
    device_replacement: 'Dell $1'
    brand_replacement: 'Dell'
    model_replacement: '$1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:HTC|Htc|HTC_blocked[^;]*)[^;]*; *(?:HTC)?([^;,\)]+)'
    device_replacement: 'HTC $1'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: 'WPDesktop; (Windows Phone 8[SX] by HTC)'
    device_replacement: 'HTC $1'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: '(LEO70)'
    device_replacement: 'HTC $1'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:HUAWEI)[^;]*; *(?:HUAWEI )?([^;,\)]+)'
    device_replacement: 'Huawei $1'
    brand_replacement: 'Huawei'
    model_replacement: '$1'
  - regex: 'WPDesktop; (W1-U00)'
    device_replacement: 'Huawei $1'
    brand_replacement: 'Huawei'
    model_replacement: '$1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:LG|Lg)[^;]*; *(?:LG[ \-])?([^;,\)]+)'
    device_replacement: 'LG $1'
    brand_replacement: 'LG'
    model_replacement: '$1'
  - regex: 'Lumia; (2520)'
    device_replacement: 'Lumia $1'
    brand_replacement: 'Nokia'
    model_replacement: 'Lumia $1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(?:NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*(\d{3,}[^;\)]*)'
    device_replacement: 'Lumia $1'
    brand_replacement: 'Nokia'
    model_replacement: 'Lumia $1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(RM-\d{3,})'
    device_replacement: 'Nokia $1'
    brand_replacement: 'Nokia'
    model_replacement: '$1'
  - regex: '(?:Windows Phone Search.*|WPDesktop;) *(?:NOKIA|Nokia); *(Lumia[^;\)]+)'
    device_replacement: 'Nokia $1'
    brand_replacement: 'Nokia'
    model_replacement: '$1'
  - regex: 'WPDesktop;(?: NOKIA; Nokia| NOKIA;| Nokia)? (\d+[^;\)]+)'
    device_replacement: 'Nokia Lumia $1'
    brand_replacement: 'Nokia'
    model_replacement: 'Lumia $1'
  - regex: 'Windows Phone Search.*NOKIA;(?:Nokia )?(\d+[^;\)]+)'
    device_replacement: 'Nokia Lumia $1'
    brand_replacement: 'Nokia'
    model_replacement: 'Lumia $1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:Microsoft(?: Corporation)?)[^;]*; *([^;,\)]+)'
    device_replacement: 'Microsoft $1'
    brand_replacement: 'Microsoft'
    model_replacement: '$1'
  - regex: '(?:Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)]|WPDesktop;) ?(?:ARM; ?Touch; ?|Touch; ?)? *((?:LUMIA ?|[Ll]umia ?)[^;\)]+)'
    device_replacement: 'Microsoft $1'
    brand_replacement: 'Microsoft'
    model_replacement: '$1'
  - regex: 'WPDesktop; *(?:PRESTIGIO;)? (PSP[^;\)]+)'
    device_replacement: 'Prestigio $1'
    brand_replacement: 'Prestigio'
    model_replacement: '$1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:SAMSUNG)[^;]*; *(?:SAMSUNG )?([^;,\.\)]+)'
    device_replacement: 'Samsung $1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: 'WPDesktop; *(?:SAMSUNG;)? ((?:GT-|SGH-)[^;\)]+)'
    device_replacement: 'Samsung $1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:TOSHIBA|FujitsuToshibaMobileCommun)[^;]*; *([^;,\)]+)'
    device_replacement: 'Toshiba $1'
    brand_replacement: 'Toshiba'
    model_replacement: '$1'
  - regex: 'Windows Phone [^;]+; .*?IEMobile/[^;\)]+[;\)] ?(?:ARM; ?Touch; ?(?:rv:\d+; )?|Touch; ?|WpsLondonTest; ?)?([^;]+); *([^;,\)]+)'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: 'WPDesktop; ([^;]+); *([^;,\)]+)'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: 'Windows Phone Search \(Windows Phone OS [^;]+;([^;]+);([^;]+);'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '(?:^|; )SAMSUNG\-([A-Za-z0-9\-]+).* Bada/'
    device_replacement: 'Samsung $1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: '\(Mobile; ALCATEL ?(One|ONE) ?(Touch|TOUCH) ?([^;/]+)(?:/[^;]+)?; rv:[^\)]+\) Gecko/[^\/]+ Firefox/'
    device_replacement: 'Alcatel $1 $2 $3'
    brand_replacement: 'Alcatel'
    model_replacement: 'One Touch $3'
  - regex: '\(Mobile; (?:ZTE([^;]+)|(OpenC)|(Open) (C)); rv:[^\)]+\) Gecko/[^\/]+ Firefox/'
    regex_flag: 'i'
    device_replacement: 'ZTE $1$2$3$4'
    brand_replacement: 'ZTE'
    model_replacement: '$1$2$3$4'
  - regex: 'Nokia(N[0-9]+)([A-z_\-][A-z0-9_\-]*)'
    device_replacement: 'Nokia $1'
    brand_replacement: 'Nokia'
    model_replacement: '$1$2'
  - regex: '(?:Lumia|NOKIA; Nokia) ([A-Za-z0-9\-]+)'
    device_replacement: 'Lumia $1'
    brand_replacement: 'Nokia'
    model_replacement: 'Lumia $1'
  - regex: '(?:NOKIA|[Nn]okia)+(?:\-| *|; *)(?:([A-Za-z0-9]+)\-[0-9a-f]{32}|([A-Za-z0-9\-]+)(?:UCBrowser)|([A-Za-z0-9\-]+))'
    device_replacement: 'Nokia $1$2$3'
    brand_replacement: 'Nokia'
    model_replacement: '$1$2$3'
  - regex: '\(Symbian; U; S60 V5; [A-z]{2}\-[A-z]{2}; (SonyEricsson|Samsung|Nokia|LG)([^;/]+)\)'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '\(Symbian(?:/3)?; U; ([^;]+);'
    device_replacement: 'Nokia $1'
    brand_replacement: 'Nokia'
    model_replacement: '$1'
  - regex: 'BB10; ([A-Za-z0-9\- ]+)\)'
    device_replacement: 'BlackBerry $1'
    brand_replacement: 'BlackBerry'
    model_replacement: '$1'
  - regex: 'Play[Bb]ook.+RIM Tablet OS'
    device_replacement: 'BlackBerry Playbook'
    brand_replacement: 'BlackBerry'
    model_replacement: 'Playbook'
  - regex: 'Black[Bb]erry *?([a-z0-9]+)'
    device_replacement: 'BlackBerry $1'
    brand_replacement: 'BlackBerry'
    model_replacement: '$1'
  - regex: 'Black[Bb]erry'
    device_replacement: 'BlackBerry $1'
    brand_replacement: 'BlackBerry'
    model_replacement: '$1'
  - regex: '(Pre|Pixi)/\d+\.\d+'
    device_replacement: 'Palm $1'
    brand_replacement: 'Palm'
    model_replacement: '$1'
  - regex: 'Palm([0-9]+)'
    device_replacement: 'Palm $1'
    brand_replacement: 'Palm'
    model_replacement: '$1'
  - regex: '\b(Tungsten)\b'
    device_replacement: 'Palm $1'
    brand_replacement: 'Palm'
  - regex: '(Xiino)'
    device_replacement: 'Palm'
    brand_replacement: 'Palm'
    model_replacement: ' '
  - regex: 'Treo([A-Za-z0-9]+)'
    device_replacement: 'Palm Treo $1'
    brand_replacement: 'Palm'
    model_replacement: 'Treo $1'
  - regex: 'webOS.*(P160U(?:NA)?)/(\d+).(\d+)'
    device_replacement: 'HP Veer'
    brand_replacement: 'HP'
    model_replacement: 'Veer'
  - regex: '(Touch[Pp]ad)/\d+\.\d+'
    device_replacement: 'HP TouchPad'
    brand_replacement: 'HP'
    model_replacement: 'TouchPad'
  - regex: 'HPiPAQ([A-Za-z0-9]+)/\d+.\d+'
    device_replacement: 'HP iPAQ $1'
    brand_replacement: 'HP'
    model_replacement: 'iPAQ $1'
  - regex: 'PDA; (PalmOS)/sony/model_replacement ([a-z]+)/Revision'
    device_replacement: '$1'
    brand_replacement: 'Sony'
    model_replacement: '$1 $2'
  - regex: 'Apple\s?TV(\d,\d)?(?:.* \((\d)[;\)])?'
    device_replacement: 'AppleTV'
    brand_replacement: 'Apple'
    model_replacement: 'AppleTV$1$2'
  - regex: '(QtCarBrowser)'
    device_replacement: 'Tesla Model S'
    brand_replacement: 'Tesla'
    model_replacement: 'Model S'
  - regex: '(iPad)(\d+,\d+)|(iPad)(?:;| Simulator;)'
    device_replacement: '$1$3'
    brand_replacement: 'Apple'
    model_replacement: '$1$2$3'
  - regex: '(iPd)(\d+,\d+)'
    device_replacement: 'iPod'
    brand_replacement: 'Apple'
    model_replacement: 'iPod$2'
  - regex: '(iPod)(\d+,\d+).*(iPod touch)'
    device_replacement: '$3'
    brand_replacement: 'Apple'
    model_replacement: '$1$2'
  - regex: '(iPod)(\d+,\d+)|(iPod|iPod touch)(?:;| Simulator;)'
    device_replacement: '$1$3'
    brand_replacement: 'Apple'
    model_replacement: '$1$2$3'
  - regex: '(iPh)(\d+,\d+)'
    device_replacement: 'iPhone'
    brand_replacement: 'Apple'
    model_replacement: 'iPhone$2'
  - regex: '(iPhone)(\d+,\d+)|(iPhone)(?:;| Simulator;)'
    device_replacement: '$1$3'
    brand_replacement: 'Apple'
    model_replacement: '$1$2$3'
  - regex: 'CFNetwork/.* Darwin/\d.*\(((?:Mac|iMac|PowerMac|PowerBook)[^\d]*)(\d+)(?:,|%2C)(\d+)'
    device_replacement: '$1$2,$3'
    brand_replacement: 'Apple'
    model_replacement: '$1$2,$3'
  - regex: 'CFNetwork/.* Darwin/\d.*\((?:i386|x86_64)\)'
    device_replacement: 'iOS-Device'
    brand_replacement: 'Apple'
    model_replacement: 'Mac OS X-Device'
  - regex: 'CFNetwork/.* Darwin/\d'
    device_replacement: 'iOS-Device'
    brand_replacement: 'Apple'
    model_replacement: 'iOS-Device'
  - regex: 'acer_([A-Za-z0-9]+)_'
    device_replacement: 'Acer $1'
    brand_replacement: 'Acer'
    model_replacement: '$1'
  - regex: '(?:alcatel[ _\-])(?:(?:one[ _\-]?touch[ _\-]|ot[ \-]))((?:(?!UNTRUSTED|Linux|Firmware|AppleWebKit|Build|UCWEB|[;/\(\)_\-]).)+)'
    regex_flag: 'i'
    device_replacement: 'Alcatel One Touch $1'
    brand_replacement: 'Alcatel'
    model_replacement: 'One Touch $1'
  - regex: '(?:ALCATEL|Alcatel)-([A-Za-z0-9\-]+)'
    device_replacement: 'Alcatel $1'
    brand_replacement: 'Alcatel'
    model_replacement: '$1'
  - regex: '(?:Amoisonic|Amoi)[_\- /]?([a-z0-9]+)'
    regex_flag: 'i'
    device_replacement: 'Amoi $1'
    brand_replacement: 'Amoi'
    model_replacement: '$1'
  - regex: 'garmin-asus-([^/]+)'
    regex_flag: 'i'
    device_replacement: 'Garmin $1'
    brand_replacement: 'Garmin-Asus'
    model_replacement: '$1'
  - regex: '(?:; |\/|^)((?:Transformer (?:Pad|Prime) |Transformer |PadFone[ _]?)[A-Za-z0-9]*)'
    device_replacement: 'Asus $1'
    brand_replacement: 'Asus'
    model_replacement: '$1'
  - regex: '(?:asus.*?ASUS|Asus|ASUS|asus)[\- ;]*((?:Transformer (?:Pad|Prime) |Transformer |Padfone |Nexus[ _])?[A-Za-z0-9]+)'
    device_replacement: 'Asus $1'
    brand_replacement: 'Asus'
    model_replacement: '$1'
  - regex: '\bBIRD[ \-\.]([A-Za-z0-9]+)'
    device_replacement: 'Bird $1'
    brand_replacement: 'Bird'
    model_replacement: '$1'
  - regex: '\bDell ([A-Za-z0-9]+)'
    device_replacement: 'Dell $1'
    brand_replacement: 'Dell'
    model_replacement: '$1'
  - regex: 'DoCoMo/2\.0 ([A-Za-z0-9]+)'
    device_replacement: 'DoCoMo $1'
    brand_replacement: 'DoCoMo'
    model_replacement: '$1'
  - regex: '([A-Za-z0-9]+)_W\;FOMA'
    device_replacement: 'DoCoMo $1'
    brand_replacement: 'DoCoMo'
    model_replacement: '$1'
  - regex: '([A-Za-z0-9]+)\;FOMA'
    device_replacement: 'DoCoMo $1'
    brand_replacement: 'DoCoMo'
    model_replacement: '$1'
  - regex: '(Enseo)/([A-Za-z0-9]+)'
    device_replacement: '$1'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '\b(?:HTC/|HTC/[a-z0-9]+/)?HTC[ _\-;]? *(.*?)(?:-?Mozilla|fingerPrint|[;/\(\)]|$)'
    regex_flag: 'i'
    device_replacement: 'HTC $1'
    brand_replacement: 'HTC'
    model_replacement: '$1'
  - regex: 'Huawei([A-Za-z0-9]+)'
    device_replacement: 'Huawei $1'
    brand_replacement: 'Huawei'
    model_replacement: '$1'
  - regex: 'HUAWEI-([A-Za-z0-9]+)'
    device_replacement: 'Huawei $1'
    brand_replacement: 'Huawei'
    model_replacement: '$1'
  - regex: 'vodafone([A-Za-z0-9]+)'
    device_replacement: 'Huawei Vodafone $1'
    brand_replacement: 'Huawei'
    model_replacement: 'Vodafone $1'
  - regex: 'i\-mate ([A-Za-z0-9]+)'
    device_replacement: 'i-mate $1'
    brand_replacement: 'i-mate'
    model_replacement: '$1'
  - regex: 'Kyocera\-([A-Za-z0-9]+)'
    device_replacement: 'Kyocera $1'
    brand_replacement: 'Kyocera'
    model_replacement: '$1'
  - regex: 'KWC\-([A-Za-z0-9]+)'
    device_replacement: 'Kyocera $1'
    brand_replacement: 'Kyocera'
    model_replacement: '$1'
  - regex: '\b(?:[Ll]enovo|LENOVO)+[ _\-]?([^,;:/ \)]+)'
    device_replacement: 'Lenovo $1'
    brand_replacement: 'Lenovo'
    model_replacement: '$1'
  - regex: '(HbbTV)/[0-9]+\.[0-9]+\.[0-9]+ \([^;]*; *(LG)E *; *([^;]*) *;[^;]*;[^;]*;\)'
    device_replacement: '$1'
    brand_replacement: '$2'
    model_replacement: '$3'
  - regex: '(HbbTV)/1\.1\.1.*CE-HTML/1\.\d;Vendor/([^;]+);(?:.*SW-Version/.*(LF[^;]+);)?'
    device_replacement: '$1'
    brand_replacement: '$2'
    model_replacement: '$3'
  - regex: '(HbbTV)(?:/1\.1\.1)?(?: ?\(;;;;;\))?; *CE-HTML(?:/1\.\d)?; *([^ ]+) ([^;]+);'
    device_replacement: '$1'
    brand_replacement: '$2'
    model_replacement: '$3'
  - regex: '(HbbTV)/1\.1\.1 \(;;;;;\) Maple_2011'
    device_replacement: '$1'
    brand_replacement: 'Samsung'
  - regex: '(HbbTV)/[0-9]+\.[0-9]+\.[0-9]+ \([^;]*; *(?:CUS:([^;]*)|([^;]+)) *; *([^;]*) *;.*;'
    device_replacement: '$1'
    brand_replacement: '$2$3'
    model_replacement: '$4'
  - regex: '(HbbTV)/[0-9]+\.[0-9]+\.[0-9]+'
    device_replacement: '$1'
  - regex: 'LGE; (?:Media\/)?([^;]*);[^;]*;[^;]*;?\); "?LG NetCast(\.TV|\.Media|)-\d+'
    device_replacement: 'NetCast$2'
    brand_replacement: 'LG'
    model_replacement: '$1'
  - regex: 'LGE; ([^;]+).*LG NetCast\.TV-.*'
    device_replacement: 'NetCast.TV'
    brand_replacement: 'LG'
    model_replacement: '$1'
  - regex: 'LG NetCast\.TV'
    device_replacement: 'NetCast.TV'
    brand_replacement: 'LG'
  - regex: 'InettvBrowser/[0-9]+\.[0-9A-Z]+ \([^;]*;(Sony)([^;]*);[^;]*;[^\)]*\)'
    device_replacement: 'Inettv'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: 'InettvBrowser/[0-9]+\.[0-9A-Z]+ \([^;]*;([^;]*);[^;]*;[^\)]*\)'
    device_replacement: 'Inettv'
    brand_replacement: 'Generic_Inettv'
    model_replacement: '$1'
  - regex: '(SMART-TV|SmartTV)'
    brand_replacement: 'Samsung'
  - regex: '(InettvBrowser|TSBNetTV|NETTV|HBBTV|DirectFB)'
    device_replacement: 'Inettv'
    brand_replacement: 'Generic_Inettv'
  - regex: 'Series60/\d\.\d (LG)[\-]?([A-Za-z0-9 \-]+)'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '; *(LG-)([A-Z]{1,2}\d{2,}[^,;/\)\(]*?)(?:Build| V\d+|[,;/\)\(]|$)'
    device_replacement: '$1$2'
    brand_replacement: 'LG'
    model_replacement: '$2'
  - regex: '\b(?:LGE[ \-]LG\-(?:AX)?|LGE |LGE?-LG|LGE?[ \-]|LG[ /\-]|lg[\-])([A-Za-z0-9]+)\b'
    device_replacement: 'LG $1'
    brand_replacement: 'LG'
    model_replacement: '$1'
  - regex: '(?:^LG[\-]?|^LGE[\-/]?)([A-Za-z]+[0-9]+[A-Za-z]*)'
    device_replacement: 'LG $1'
    brand_replacement: 'LG'
    model_replacement: '$1'
  - regex: '^LG([0-9]+[A-Za-z]*)'
    device_replacement: 'LG $1'
    brand_replacement: 'LG'
    model_replacement: '$1'
  - regex: '(KIN\.[^ ]+) (\d+)\.(\d+)'
    device_replacement: 'Microsoft $1'
    brand_replacement: 'Microsoft'
    model_replacement: '$1'
  - regex: '(?:MSIE|XBMC).*\b(Xbox)\b'
    device_replacement: '$1'
    brand_replacement: 'Microsoft'
    model_replacement: '$1'
  - regex: '; ARM; Trident/6\.0; Touch[\);]'
    device_replacement: 'Microsoft Surface RT'
    brand_replacement: 'Microsoft'
    model_replacement: 'Surface RT'
  - regex: '(Zune)\/'
    device_replacement: '$1'
    brand_replacement: 'Microsoft'
    model_replacement: '$1'
  - regex: 'Motorola\-([A-Za-z0-9]+)'
    device_replacement: 'Motorola $1'
    brand_replacement: 'Motorola'
    model_replacement: '$1'
  - regex: 'MOTO\-([A-Za-z0-9]+)'
    device_replacement: 'Motorola $1'
    brand_replacement: 'Motorola'
    model_replacement: '$1'
  - regex: 'MOT\-([A-z0-9][A-z0-9\-]*)'
    device_replacement: 'Motorola $1'
    brand_replacement: 'Motorola'
    model_replacement: '$1'
  - regex: 'Nintendo WiiU'
    device_replacement: 'Nintendo Wii U'
    brand_replacement: 'Nintendo'
    model_replacement: 'Wii U'
  - regex: 'Nintendo (DS|3DS|DSi|Wii);'
    device_replacement: 'Nintendo $1'
    brand_replacement: 'Nintendo'
    model_replacement: '$1'
  - regex: '(?:Pantech|PANTECH)[ _-]?([A-Za-z0-9\-]+)'
    device_replacement: 'Pantech $1'
    brand_replacement: 'Pantech'
    model_replacement: '$1'
  - regex: '(Philips) ?([A-Za-z0-9]+)'
    device_replacement: '$1 $2'
    brand_replacement: '$1'
    model_replacement: '$2'
  - regex: '\b(Sprint)[: ]([^;,/ ]+)'
    device_replacement: '$1$2'
    brand_replacement: 'Sprint'
    model_replacement: '$2'
  - regex: 'SymbianOS/9\.\d.* Samsung[/\-]([A-Za-z0-9 \-]+)'
    device_replacement: 'Samsung $1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: '(Samsung)(SGH)(i[0-9]+)'
    device_replacement: '$1 $2$3'
    brand_replacement: '$1'
    model_replacement: '$2-$3'
  - regex: 'SAMSUNG-ANDROID-MMS/([^;/]+)'
    device_replacement: '$1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: 'SAMSUNG(?:; |[ -/])([A-Za-z0-9\-]+)'
    regex_flag: 'i'
    device_replacement: 'Samsung $1'
    brand_replacement: 'Samsung'
    model_replacement: '$1'
  - regex: '(Dreamcast)'
    device_replacement: 'Sega $1'
    brand_replacement: 'Sega'
    model_replacement: '$1'
  - regex: '^SIE-([A-Za-z0-9]+)'
    device_replacement: 'Siemens $1'
    brand_replacement: 'Siemens'
    model_replacement: '$1'
  - regex: 'snom( m\d+|\d+-SIP)'
    device_replacement: 'snom $1'
    brand_replacement: 'snom'
    model_replacement: '$1'
  - regex: 'Softbank/[12]\.0/([A-Za-z0-9]+)'
    device_replacement: 'Softbank $1'
    brand_replacement: 'Softbank'
    model_replacement: '$1'
  - regex: 'SonyEricsson([A-Za-z0-9]+)/'
    device_replacement: 'Ericsson $1'
    brand_replacement: 'SonyEricsson'
    model_replacement: '$1'
  - regex: 'PlayStation (\d+)'
    regex_flag: 'i'
    device_replacement: 'PlayStation $1'
    brand_replacement: 'Sony'
    model_replacement: 'PlayStation $1'
  - regex: '(PlayStation (?:Portable|Vita))'
    device_replacement: '$1'
    brand_replacement: 'Sony'
    model_replacement: '$1'
  - regex: 'Sony([^ ]+) '
    device_replacement: 'Sony $1'
    brand_replacement: 'Sony'
    model_replacement: '$1'
  - regex: ' (Kindle)/(\d+\.\d+)'
    device_replacement: 'Kindle'
    brand_replacement: 'Amazon'
    model_replacement: '$1 $2'
  - regex: ' (Kindle|Silk)/(\d+)\.'
    device_replacement: 'Kindle'
    brand_replacement: 'Amazon'
    model_replacement: 'Kindle'
  - regex: '(WeTab)-Browser'
    device_replacement: '$1'
    brand_replacement: 'WeTab'
    model_replacement: '$1'
  - regex: 'Puffin/[\d\.]+IT'
    device_replacement: 'iPad'
    brand_replacement: 'Apple'
    model_replacement: 'iPad'
  - regex: 'Puffin/[\d\.]+IP'
    device_replacement: 'iPhone'
    brand_replacement: 'Apple'
    model_replacement: 'iPhone'
  - regex: 'Puffin/[\d\.]+AT'
    device_replacement: 'Generic Tablet'
    brand_replacement: 'Generic'
    model_replacement: 'Tablet'
  - regex: 'Puffin/[\d\.]+AP'
    device_replacement: 'Generic Smartphone'
    brand_replacement: 'Generic'
    model_replacement: 'Smartphone'
  - regex: 'Android[\- ][\d]+\.[\d]+; [A-Za-z]{2}\-[A-Za-z]{0,2}; WOWMobile (.+) Build[ /]'
    brand_replacement: 'Generic_Android'
    model_replacement: '$1'
  - regex: 'Android[\- ][\d]+\.[\d]+\-update1; [A-Za-z]{2}\-[A-Za-z]{0,2} *; *(.+?) Build[ /]'
    brand_replacement: 'Generic_Android'
    model_replacement: '$1'
  - regex: 'Android[\- ][\d]+(?:\.[\d]+){1,2}; *[A-Za-z]{2}[_\-][A-Za-z]{0,2}\-? *; *(.+?) Build[ /]'
    brand_replacement: 'Generic_Android'
    model_replacement: '$1'
  - regex: 'Android[\- ][\d]+(?:\.[\d]+){1,2}; *[A-Za-z]{0,2}\- *; *(.+?) Build[ /]'
    brand_replacement: 'Generic_Android'
    model_replacement: '$1'
  - regex: 'Android[\- ][\d]+(?:\.[\d]+){1,2}; *[a-z]{0,2}[_\-]?[A-Za-z]{0,2};? Build[ /].* Mobile Safari'
    device_replacement: 'Generic Smartphone'
    brand_replacement: 'Generic'
    model_replacement: 'Smartphone'
  - regex: 'Android[\- ][\d]+(?:\.[\d]+){1,2}; *[a-z]{0,2}[_\-]?[A-Za-z]{0,2};? Build[ /]'
    device_replacement: 'Generic Tablet'
    brand_replacement: 'Generic'
    model_replacement: 'Tablet'
  - regex: 'Android[\- ][\d]+(?:\.[\d]+){1,2}; *\-?[A-Za-z]{2}; *(.+?) Build[ /]'
    brand_replacement: 'Generic_Android'
    model_replacement: '$1'
  - regex: 'Android[\- ][\d]+(?:\.[\d]+){1,2}(?:;.*)?; *(.+?) Build[ /]'
    brand_replacement: 'Generic_Android'
    model_replacement: '$1'
  - regex: '(GoogleTV)'
    brand_replacement: 'Generic_Inettv'
    model_replacement: '$1'
  - regex: '(WebTV)/\d+.\d+'
    brand_replacement: 'Generic_Inettv'
    model_replacement: '$1'
  - regex: '(Android 3\.\d|Opera Tablet|Tablet; .+Firefox/|Android.*(?:Tab|Pad))'
    regex_flag: 'i'
    device_replacement: 'Generic Tablet'
    brand_replacement: 'Generic'
    model_replacement: 'Tablet'
  - regex: '(Symbian|\bS60(Version|V\d)|\bS60\b|\((Series 60|Windows Mobile|Palm OS|Bada); Opera Mini|Windows CE|Opera Mobi|BREW|Brew|Mobile; .+Firefox/|iPhone OS|Android|MobileSafari|Windows *Phone|\(webOS/|PalmOS)'
    device_replacement: 'Generic Smartphone'
    brand_replacement: 'Generic'
    model_replacement: 'Smartphone'
  - regex: '(hiptop|avantgo|plucker|xiino|blazer|elaine)'
    regex_flag: 'i'
    device_replacement: 'Generic Smartphone'
    brand_replacement: 'Generic'
    model_replacement: 'Smartphone'
  - regex: '(bot|zao|borg|DBot|oegp|silk|Xenu|zeal|^NING|CCBot|crawl|htdig|lycos|slurp|teoma|voila|yahoo|Sogou|CiBra|Nutch|^Java/|^JNLP/|Daumoa|Genieo|ichiro|larbin|pompos|Qwantify|Scrapy|snappy|speedy|spider|msnbot|msrbot|vortex|^vortex|crawler|favicon|indexer|Riddler|scooter|scraper|scrubby|WhatWeb|WinHTTP|bingbot|BingPreview|openbot|gigabot|furlbot|polybot|seekbot|^voyager|archiver|Icarus6j|mogimogi|Netvibes|blitzbot|altavista|charlotte|findlinks|Retreiver|TLSProber|WordPress|SeznamBot|ProoXiBot|wsr\-agent|Squrl Java|EtaoSpider|PaperLiBot|SputnikBot|A6\-Indexer|netresearch|searchsight|baiduspider|YisouSpider|ICC\-Crawler|http%20client|Python-urllib|dataparksearch|converacrawler|Screaming Frog|AppEngine-Google|YahooCacheSystem|fast\-webcrawler|Sogou Pic Spider|semanticdiscovery|Innovazion Crawler|facebookexternalhit|Google.*/\+/web/snippet|Google-HTTP-Java-Client|BlogBridge|IlTrovatore-Setaccio|InternetArchive|GomezAgent|WebThumbnail|heritrix|NewsGator|PagePeeker|Reaper|ZooShot|holmes|NL-Crawler|StatusCake|Google Web Preview|Catchpoint(?: bot)?)'
    regex_flag: 'i'
    device_replacement: 'Spider'
    brand_replacement: 'Spider'
    model_replacement: 'Desktop'
  - regex: '^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\-|airn|alav|asus|attw|au\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bmobile|bell|bird|bw\-n|bw\-u|beck|benq|bilb|blac|c55/|cdm\-|chtm|capi|comp|cond|dall|dbte|dc\-s|dica|ds\-d|ds12|dait|devi|dmob|doco|dopo|dorado|el(?:38|39|48|49|50|55|58|68)|el[3456]\d{2}dual|erk0|esl8|ex300|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\-|fly_|g\-mo|g1 u|g560|gf\-5|grun|gene|go.w|good|grad|hcit|hd\-m|hd\-p|hd\-t|hei\-|hp i|hpip|hs\-c|htc |htc\-|htca|htcg|htcp|htcs|htct|htc_|haie|hita|huaw|hutc|i\-20|i\-go|i\-ma|i\-mobile|i230|iac|iac\-|iac/|ig01|im1k|inno|iris|jata|kddi|kgt|kgt/|kpt |kwc\-|klon|lexi|lg g|lg\-a|lg\-b|lg\-c|lg\-d|lg\-f|lg\-g|lg\-k|lg\-l|lg\-m|lg\-o|lg\-p|lg\-s|lg\-t|lg\-u|lg\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\-|lge/|leno|m1\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\-|nem\-|newg|neon|netf|noki|nzph|o2 x|o2\-x|opwv|owg1|opti|oran|ot\-s|p800|pand|pg\-1|pg\-2|pg\-3|pg\-6|pg\-8|pg\-c|pg13|phil|pn\-2|pt\-g|palm|pana|pire|pock|pose|psio|qa\-a|qc\-2|qc\-3|qc\-5|qc\-7|qc07|qc12|qc21|qc32|qc60|qci\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\-|scp\-|sdk/|se47|sec\-|sec0|sec1|semc|sgh\-|shar|sie\-|sk\-0|sl45|slid|smb3|smt5|sp01|sph\-|spv |spv\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\-mo|t218|t250|t600|t610|t618|tcl\-|tdg\-|telm|tim\-|ts70|tsm\-|tsm3|tsm5|tx\-9|tagt|talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vertu|vite|voda|vulc|w3c |w3c\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\-|your|zte\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|m\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\-|webc|whit|wmlb|xda\-|xda_)'
    regex_flag: 'i'
    device_replacement: 'Generic Feature Phone'
    brand_replacement: 'Generic'
    model_replacement: 'Feature Phone'
  - regex: '^(Ice)$'
    device_replacement: 'Generic Feature Phone'
    brand_replacement: 'Generic'
    model_replacement: 'Feature Phone'
  - regex: '(wap[\-\ ]browser|maui|netfront|obigo|teleca|up\.browser|midp)'
    regex_flag: 'i'
    device_replacement: 'Generic Feature Phone'
    brand_replacement: 'Generic'
    model_replacement: 'Feature Phone'
